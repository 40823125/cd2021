var tipuesearch = {"pages": [{'title': 'Stage1-ag14', 'text': 'stage1-ag14 \n', 'tags': '', 'url': 'Stage1-ag14.html'}, {'title': 'W1', 'text': '1.建立倉儲 \n 2.尋找組員: \n 40823125 \xa0 倉儲 \xa0 網頁 \n 40823110\xa0 倉儲 \xa0 網頁 \n 40823132 \xa0 倉儲 \xa0 網頁 \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '內容討論: \n stage1-ag14 發球機 \n 製作動機: 因為我們的組員裡有一個人是桌球社社長,他想要藉由發球機提供球員自主練習機會。 \n 製作規劃: 第二周:繪製零件圖並組合。 第三周:用CoppeliaSim測試並修改。 第四周:報告。 \n 任務分配: \n 40823125: \n CoppeliaSim測試 \n 轉換為Inventor檔並組合 \n 簡報製作 \n PDF製作 \n 40823110: \n 製圖(Onshape) \n 40823132: \n \n', 'tags': '', 'url': 'W2.html'}, {'title': '零件尺寸及示意圖', 'text': '球體 | 發球機主體 | 球桶 | 引球圓盤 \n 主體 \n \n \n \n \n 引球圓盤 \n \n \n \n 球桶 \n \n \n 球 \n \n', 'tags': '', 'url': '零件尺寸及示意圖.html'}, {'title': '分組開會紀錄', 'text': '\n', 'tags': '', 'url': '分組開會紀錄.html'}, {'title': 'W4', 'text': '', 'tags': '', 'url': 'W4.html'}, {'title': 'PDF', 'text': '2021-協同產品設計實習-stage1-ag14.pdf \n', 'tags': '', 'url': 'PDF.html'}, {'title': 'Stage2-ag12', 'text': 'stage2-ag12 \n 組員 \n \xa0 40823152 repo \xa0 | \xa0 40823152 site \xa0 | \n \xa0 40823153 repo \xa0 | \xa0 40823153 site \xa0 | \n \xa0 40823125 repo \xa0 | \xa0 40823125 site \xa0 | \n \xa0 40823110 repo \xa0 | \xa0 40823110 site \xa0| \n', 'tags': '', 'url': 'Stage2-ag12.html'}, {'title': 'W5', 'text': '\n', 'tags': '', 'url': 'W5.html'}, {'title': '產品目標', 'text': '主題:籃球機 二代 \n \n 動機: \n 第一次小組產品的籃球機只能自己轉動無法控制，所以二代的籃球機目標增加案件控制轉動。 \n \n 製作規劃: \n w5:確認主題，工作分配 \n \n w6:尋找lua程式與 coppeliaSim 文章 ，並且使用lua程式控制軸在coppeliaSim裡模擬，籃球機外觀修整。 \n \n w7:完成按鍵控制程式與模擬 ，籃球機外觀修整。 \n \n w8:除錯與修整，完成簡報與pdf \n \n w9:報告 \n \n', 'tags': '', 'url': '產品目標.html'}, {'title': 'W6', 'text': '', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '', 'tags': '', 'url': 'W7.html'}, {'title': 'Heroku 網站建立', 'text': 'stage2-ag12-heroku網站 \n 1.開通 Heroku 帳號(用學校email建立) \n 2.建立一個 Herokuapp \n \n 3.從\xa0 http://a.kmol.info:88/heroku.7z \xa0下載 Heroku cli 程式檔案, 解開至隨身碟 Y:\xa0 \n \n 4.修改隨身系統的啟動批次檔案start.bat: \n \n 5.測試是否能夠在修改後的命令列中執行 heroku.exe, 輸入 heroku version 若回應所使用的版本表示上述路徑設定已經成功 \n \n 6.有proxy的話，需要 在 start_ipv6.bat 中加入: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n \n \n \n REM for heroku login \n set HTTP_PROXY=http://[2001:288:6004:17::53]:3128 \n set HTTPS_PROXY=http://[2001:288:6004:17::53]:3128 \n \n \n \n \n \n \n \n 7. 針對利用 Heroku 同步 Github Pages 上的網站內容 \n \n 8. \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n # 以 interactive 模式登入 Heroku, 完成後產生 y:\\home_ipv6\\_netrc \n heroku login -i \n # 針對已經登入的 Heroku 帳號下的 app, 設為此倉儲的 remote 同步倉儲, 且在倉儲中會自建名稱為 heroku 的 remoate site. \n heroku git:remote -a 名稱 \n \n \n \n \n \n', 'tags': '', 'url': 'Heroku 網站建立.html'}, {'title': 'W8', 'text': '', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '協同報告 \n 2021-協同產品設計實習-stage2-ag12.pdf \n', 'tags': '', 'url': 'W9.html'}, {'title': 'stage3-ag6', 'text': 'stage3-ag6 repo  |\xa0 stage3-ag6 site \xa0 | \n 組長: 40823152 repo \xa0|\xa0 40823152 site \xa0| \n 組員: \n 40823110 repo \xa0|\xa0 40823110 site \xa0 | \n 40823125 repo | \xa0 40823125 site \xa0 | \n 40823153 repo \xa0 | \xa0 40823153 site \xa0 | \n 40823117 repo \xa0 | \xa0 40823117 site \xa0 | \n 40823122 repo \xa0 | \xa0 40823122 site \xa0 | \n 40823129 repo \xa0 | \xa0 40823129 site \xa0 | \n 40823149 repo \xa0 | \xa0 40823149 site \xa0 | \n', 'tags': '', 'url': 'stage3-ag6.html'}, {'title': 'task 1', 'text': '讀取  stage3_2a.txt , 建立 Stage3 的分組倉儲, 分組網頁, 以及各組員倉儲及網頁連結. \n 老師的範例 : \n # open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nwith open("stage3_2a.txt") as fh:\n    # readlines will read into the whole line and put into list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n#print(len(data))\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    print(group)\n# the following will use group data to generate needed html \n 第一版 :將學號按組別排好 \n with open("stage3_2a.txt") as fh:\n   #先將我們存起來stage3_2a.txt打開並命名為fh\n    data = fh.readlines()\n    #將stage3_2a.txt的資料以串列形式存為data\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    #先取出data list中的第i項,消除元素中/n,再以\\t取出需要的文字\n    print(group[0]+\'|\'+group[0])\n    #先將group第0列推出\n    for j in range(1,18,1):\n    #設一個範圍,(1到18,每次加1,1<=j<18)\n        try:\n            print(group[j])\n        except:\n           continue\n        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑 \n 第二版 :將40823122的學號修正 \n with open("stage3_2a.txt") as fh:\n   #先將我們存起來stage3_2a.txt打開並命名為fh\n    data = fh.readlines()\n    #將stage3_2a.txt的資料以串列形式存為data\nfor i in range(len(data)):\n    newdata = data[i].replace(\'4823122\',\'40823122\')\n    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的\n    group = newdata.rstrip("\\n").split("\\t")\n    #先取出newdata list中的第i項,消除元素中/n,再以\\t取出需要的文字\n    print(group[0]+\'|\'+group[0])\n    #先將group第0列推出\n    for j in range(1,18,1):\n    #設一個範圍,(1到18,每次加1,1<=j<18)\n        try:\n            print(group[j])\n        except:\n           continue\n        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑 \n 第三版 :以網頁的形式推出,但會告知 \n print(\'<p>\'+group[0]+\' | <a href="https://\'+group[1]+\'.github.io/\'+group[0]+\'">Website</a> | <a href="https://github.com/\'+group[2]+\'/\'+group[0]+\'">Repository</a></p>\') IndexError: list index out of range \n with open("stage3_2a.txt") as fh:\n   #先將我們存起來stage3_2a.txt打開並命名為fh\n    data = fh.readlines()\n    #將stage3_2a.txt的資料以串列形式存為data\nfor i in range(len(data)):\n    newdata = data[i].replace(\'4823122\',\'40823122\')\n    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的\n    group = newdata.rstrip("\\n").split("\\t")\n    #先取出newdata list中的第i項,消除元素中/n,再以\\t取出需要的文字\n    print(\'<p>\'+group[0]+\' | <a href="https://\'+group[1]+\'.github.io/\'+group[0]+\'">Website</a> | <a href="https://github.com/\'+group[2]+\'/\'+group[0]+\'">Repository</a></p>\')\n    for j in range(1,18,2):\n    #設一個範圍,(1到18,每次+2,1<=j<18)\n        try:\n            print(\'<p>\'+group[j]+\' | Website:\'+\'<a href="https://\'+group[j]+\'.github.io/cd2021\'+\'">\'+group[j]+\'</a>\'+\' | Repository:\'+\'<a href="https://github.com/\'+group[j]+\'/cd2021\'+\'">\'+group[j]+\'</a> </p>\')\n        except:\n           continue\n        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑 \n 第四版 :將a40823112和stage3_ag修正 \n with open("stage3_2a.txt") as fh:\n   #先將我們存起來stage3_2a.txt打開並命名為fh\n    data = fh.readlines()\n    #將stage3_2a.txt的資料以串列形式存為data\nfor i in range(6):\n    #將次數限定就不會告知list index out of range了\n    newdata1 = data[i].replace(\'4823122\',\'40823122\')\n    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的\n    newdata2 = newdata1.replace(\'\\t\\t\',\'\')\n    #因為有一組只有6人,所以用 replace 把空位刪除\n    newdata3 = newdata2.replace(\'_\',\'-\')\n    #因為在編輯txt的時候-會變成_,所以用 replace 把_修正為-\n    group = newdata3.rstrip("\\n").split("\\t")\n    #先取出newdata list中的第i項,消除元素中/n,再以\\t取出需要的文字\n    print(\'<p>\'+group[0]+\' | <a href="https://\'+group[1]+\'.github.io/\'+group[0]+\'">Website</a> | <a href="https://github.com/\'+group[2]+\'/\'+group[0]+\'">Repository</a></p>\')\n    for j in range(1,18,2):\n    #設一個範圍,(1到18,每次+2,1<=j<18)\n        try:\n            n = group[j].replace(\'40823112\',\'a40823112\')\n            #因為40823112的github帳號是a40823112,所以用 replace 把帳號修正\n            print(\'<p>\'+group[j]+\' | Website:\'+\'<a href="https://\'+n+\'.github.io/cd2021\'+\'">\'+group[j]+\'</a>\'+\' | Repository:\'+\'<a href="https://github.com/\'+n+\'/cd2021\'+\'">\'+group[j]+\'</a> </p>\')\n        except:\n           continue\n        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑 \n 第五版 :將連結以老師常用的形式推出 \n with open("stage3_2a.txt") as fh:\n   #先將我們存起來stage3_2a.txt打開並命名為fh\n    data = fh.readlines()\n    #將stage3_2a.txt的資料以串列形式存為data\nfor i in range(6):\n    #將次數限定就不會告知list index out of range了\n    newdata1 = data[i].replace(\'4823122\',\'40823122\')\n    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的\n    newdata2 = newdata1.replace(\'\\t\\t\',\'\')\n    #因為有一組只有6人,所以用 replace 把空位刪除\n    newdata3 = newdata2.replace(\'_\',\'-\')\n    #因為在編輯txt的時候-會變成_,所以用 replace 把_修正為-\n    group = newdata3.rstrip("\\n").split("\\t")\n    #先取出newdata list中的第i項,消除元素中/n,再以\\t取出需要的文字\n    print(\'<p><a href="https://github.com/\'+group[1]+\'/\'+group[0]+\'">\'+group[0]+\' repo</a> | <a href="https://\'+group[2]+\'.github.io/\'+group[0]+\'">\'+group[0]+\' site</a></p>\')\n    for j in range(1,18,2):\n    #設一個範圍,(1到18,每次+2,1<=j<18)\n        try:\n            n = group[j].replace(\'40823112\',\'a40823112\')\n            #因為40823112的github帳號是a40823112,所以用 replace 把帳號修正\n            print(\'<p>\'+\'<a href="https://github.com/\'+n+\'/cd2021">\'+group[j]+\' repo</a> | <a href="https://\'+n+\'.github.io/cd2021">\'+group[j]+\' site</a></p>\')\n        except:\n           continue\n        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑 \n Anti-piracy system: \n with open("stage3_2a.txt") as fh:\n   #先將我們存起來stage3_2a.txt打開並命名為fh\n    data = fh.readlines()\n    #將stage3_2a.txt的資料以串列形式存為data\nfor i in range(6):\n    #將次數限定就不會告知list index out of range了\n    newdata1 = data[i].replace(\'4823122\',\'40823122\')\n    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的\n    newdata2 = newdata1.replace(\'\\t\\t\',\'\')\n    #因為有一組只有6人,所以用 replace 把空位刪除\n    group = newdata3.rstrip("\\n").split("\\t")\n    #先取出newdata list中的第i項,消除元素中/n,再以\\t取出需要的文字\n    print(\'<p><a href="https://github.com/\'+group[1]+\'/\'+group[0]+\'">\'+group[0]+\' repo</a> | <a href="https://\'+group[2]+\'.github.io/\'+group[0]+\'">\'+group[0]+\' site</a></p>\')\n    for j in range(1,18,2):\n    #設一個範圍,(1到18,每次+2,1<=j<18)\n        try:\n            n = group[j].replace(\'40823112\',\'a40823112\')\n            n = group[j].replace(\'4082312\',\'40823125\')\n            print(\'<p>\'+\'<a href="https://github.com/\'+n+\'/cd2021">\'+group[j]+\' repo</a> | <a href="https://\'+n+\'.github.io/cd2021">\'+group[j]+\' site</a></p>\')\n        except:\n           continue\n        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑 \n 參考資料: \n python 語法 renge \n python 基本語法 \n python loop 原理 \n 40823136 Website', 'tags': '', 'url': 'task 1.html'}, {'title': 'stage3-2a', 'text': 'stage3-ag1 repo  |  stage3-ag1 site \n 40823131 repo  |  40823131 site \n 40823112 repo  |  40823112 site \n 40823123 repo  |  40823123 site \n 40823145 repo  |  40823145 site \n 40823136 repo  |  40823136 site \n 40823109 repo  |  40823109 site \n 40823116 repo  |  40823116 site \n 40823108 repo  |  40823108 site \n stage3-ag2 repo  |  stage3-ag2 site \n 40823151 repo  |  40823151 site \n 40623121 repo  |  40623121 site \n 40871106 repo  |  40871106 site \n 40823102 repo  |  40823102 site \n 40823104 repo  |  40823104 site \n 40823106 repo  |  40823106 site \n 40823101 repo  |  40823101 site \n 40823132 repo  |  40823132 site \n stage3-ag3 repo  |  stage3-ag3 site \n 40823119 repo  |  40823119 site \n 40823150 repo  |  40823150 site \n 40823103 repo  |  40823103 site \n 40823107 repo  |  40823107 site \n 40523252 repo  |  40523252 site \n 40823154 repo  |  40823154 site \n stage3-ag4 repo  |  stage3-ag4 site \n 40823142 repo  |  40823142 site \n 40823144 repo  |  40823144 site \n 40823127 repo  |  40823127 site \n 40823148 repo  |  40823148 site \n 40823121 repo  |  40823121 site \n 40823135 repo  |  40823135 site \n 40823114 repo  |  40823114 site \n 40823146 repo  |  40823146 site \n stage3-ag5 repo  |  stage3-ag5 site \n 40823111 repo  |  40823111 site \n 40823115 repo  |  40823115 site \n 40823128 repo  |  40823128 site \n 40823120 repo  |  40823120 site \n 40823140 repo  |  40823140 site \n 40823124 repo  |  40823124 site \n 40823139 repo  |  40823139 site \n 40823126 repo  |  40823126 site \n stage3-ag6 repo  |  stage3-ag6 site \n 40823152 repo  |  40823152 site \n 40823110 repo  |  40823110 site \n 40823122 repo  |  40823122 site \n 40823125 repo  |  40823125 site \n 40823117 repo  |  40823117 site \n 40823129 repo  |  40823129 site \n 40823149 repo  |  40823149 site \n 40823153 repo  |  40823153 site', 'tags': '', 'url': 'stage3-2a.html'}, {'title': 'task 2', 'text': 'remote API 操作測試 \n \n 目前在用2W1a.ttt時沒辦法使用老師給的內部IP 192.168.192.1+組別+排序別,進行連線', 'tags': '', 'url': 'task 2.html'}, {'title': 'Error\xa0exclude', 'text': '', 'tags': '', 'url': 'Error\xa0exclude.html'}, {'title': '協同失誤', 'text': '在協同時因為組員們的倉儲版本不同導致無法推送 \n \n 最後我們只好將版本不同的倉儲刪掉重新協同 \n \n', 'tags': '', 'url': '協同失誤.html'}, {'title': '發球機版本', 'text': '', 'tags': '', 'url': '發球機版本.html'}, {'title': '第1版', 'text': '組合件.stl | 球體.stl | 主體.stl | 球桶.stl | 引球圓盤.stl \n 發射滾輪測試.ttt \n \n CoppeliaSim測試時的問題 \n 這個問題我有兩個猜測: \n \n \n 我認為是因為主體的孔跟轉盤的軸接的太緊了，也許 只要把其中的一個修改的小一點就可以了 \n 我認為是轉盤的軸跟轉盤是一體的所以導致轉盤的軸跟coppeliaSim的軸衝突導致,也許 只要把轉盤跟軸分開就可以了 \n \n \n 圓盤與主體的錯誤.ttt \n \n \n', 'tags': '', 'url': '第1版.html'}, {'title': '第2版', 'text': '組合圖-2.stl | 發球機主體-2.stl | 引球圓盤-2.stl \n 發球機組合圖-2.ttt \n 在發球機的引球圓盤旋轉時， 引球圓盤會微微的上下震動: \n \xa0 \xa0 我認為 引球圓盤跟轉軸是一體的，所以引球圓盤的軸跟主體的孔接觸導致引球圓盤會微微的上下震動，我猜測只要將引球圓盤的軸獨立出來就可以解決這個問題 \n \n', 'tags': '', 'url': '第2版.html'}, {'title': '第3版', 'text': '組合圖-3.stl | 主體-3.stl | 引球圓盤-3.stl | 軸承-3.stl \n 發球機組合圖-3.ttt \n 我們將引球圓盤跟轉軸分開後， 引球圓盤就可以正常轉動了，不過軸太短了導致引球圓盤跟主體的發球孔會卡住，只要將軸加長就可以解決 \n \n', 'tags': '', 'url': '第3版.html'}, {'title': '第4版', 'text': '組合圖-4.stl | 軸承-4.stl \n 發球機-4.ttt \n 發球機-4-1.ttt \n 我們將軸加長後，引球圓盤就可以正常轉動了 \n \n 但是在要將球完整的引導至發球機的軌道裡，會不斷跳動 \n \n', 'tags': '', 'url': '第4版.html'}, {'title': '第5版', 'text': '組合圖-5.stl | 主體-5.stl | 軸承-5.stl \n 發球機-5.ttt \n 我們將發球機的軌道移到後面，不過跟第4個版本一樣球和圓盤無法將球正確的引至發球軌道上 \n 我認為是球、圓盤、球桶的設定沒有設定好 \n \n \n', 'tags': '', 'url': '第5版.html'}, {'title': '籃球機版本', 'text': '', 'tags': '', 'url': '籃球機版本.html'}, {'title': '版本一', 'text': '籃球機 1.4 \n coppeliaSim模擬:版本1.4 \n 因為版本2在 coppeliaSim裡被自動放大10倍，所以版本3無法擊中籃框，所以在 coppeliaSim裡 版本4放大10後就能擊中籃框。 \n \n \n 因為版本2在 coppeliaSim裡被自動放大10倍，所以版本3無法擊中籃框，所以版本4放大10後就能擊中籃框。 \n 可調性 \n \n \n \n \n', 'tags': '', 'url': '版本一.html'}, {'title': '版本二', 'text': '', 'tags': '', 'url': '版本二.html'}, {'title': '2.1', 'text': '籃球機2.1 \n \n \n', 'tags': '', 'url': '2.1.html'}, {'title': '2.2', 'text': '籃球機2.2 \n 無框版 \n \n \n \n \n 有框版 \n \n \n', 'tags': '', 'url': '2.2.html'}, {'title': '2.3', 'text': '籃球機2.3 \n \n \n CoppeliaSim v-rep 連桿運動問題 \n 一開始在CoppeliaSim上模擬發現模型無法順利地運轉 \n \n CoppeliaSim v-rep 連桿運動問題 解決 \n 後來才發現原來是尺寸的問題 \n 由於coppliasim對與尺寸可能無法到inventor那麼精準所以要預留空隙,才能順利運轉 \n \n', 'tags': '', 'url': '2.3.html'}, {'title': '2.4', 'text': '籃球機2.4 \n 2.4.1 \n \n \n 2.4.2 \n \n \n 2.4.3 \n 擊球桿新增後轉功能，可以有效控制擊球的時機。 \n \n', 'tags': '', 'url': '2.4.html'}]};