<h1>個人簡介</h1>
<p>四設計二甲 40823125 楊子賢</p>
<p><strong>github</strong>:</p>
<p><a href="https://github.com/40823125/cd2021" title="cd2021"><img caption="false" height="267" src="/images/microsoftgithublove.0-1.jpg" width="400"/></a></p>
<p><strong>gitter</strong>:</p>
<p><a href="https://gitter.im/home" title="gitter"><img caption="false" height="400" src="/images/unnamed.jpg" width="400"/></a></p>
<p><strong>youtube</strong>:</p>
<p><a href="https://www.youtube.com/channel/UCAAFSB7_5yZVKj76pFEoVEw"><img alt="" height="200" src="/images/youtube_logo_dark.jpg" width="400"/></a></p>
<h1>Stage1-ag14</h1>
<p><strong>倉儲</strong>:</p>
<p><a href="https://github.com/40823125/stage1-ag14"><img alt="" height="210" src="/images/github-mark.png" width="400"/><span></span></a> </p>
<p><strong>網站</strong>:</p>
<p><a href="https://40823125.github.io/stage1-ag14/content/index.html"><img alt="" height="175" src="/images/refine_facebook-1200x630.png" width="400"/></a></p>
<h2>W1</h2>
<p>1.建立倉儲</p>
<p>2.尋找組員:</p>
<p>40823125<span> </span><a href="https://github.com/40823125/cd2021">倉儲</a><span> </span><a href="https://40823125.github.io/cd2021/">網頁</a></p>
<p>40823110 <a href="https://github.com/40823110/cd2021">倉儲</a><span><span> </span></span><a href="https://40823110.github.io/cd2021/">網頁</a></p>
<p>40823132<span><span> </span><a href="https://github.com/40823132/cd2021">倉儲</a> <a href="https://40823132.github.io/cd2021/">網頁</a></span></p>
<h2>W2</h2>
<p><strong>內容討論:</strong></p>
<p><span>stage1-ag14 發球機</span></p>
<p><strong>製作動機:</strong><br/><span>因為我們的組員裡有一個人是桌球社社長,他想要藉由發球機提供球員自主練習機會。</span></p>
<p><strong>製作規劃:</strong><br/><span>第二周:繪製零件圖並組合。</span><br/><span>第三周:用CoppeliaSim測試並修改。</span><br/><span>第四周:報告。</span></p>
<p><strong>任務分配:</strong></p>
<p>40823125:</p>
<p><span>CoppeliaSim測試</span></p>
<p><span>轉換為Inventor檔並組合</span></p>
<p><span>簡報製作</span></p>
<p><span>PDF製作</span></p>
<p>40823110:</p>
<p>製圖(Onshape)<span></span></p>
<p>40823132:</p>
<p></p>
<h3>零件尺寸及示意圖</h3>
<p><a href="https://cad.onshape.com/documents/b2fd841cc0d0a0eab0afe5cc/w/650cd44a013042653d1b995f/e/c1547cd791f26bbfc4276762">球體</a><span>|</span><a href="https://cad.onshape.com/documents/5163181e2fe649a1d31dd674/w/4e88bfbfabd294ec7f2f2b4d/e/697be15fa1b7438b20521146">發球機主體</a><span>|</span><span><a href="https://cad.onshape.com/documents/e7f83d8dad44353fefca9ba8/w/c9bfde151271f69c6a6a2b1d/e/dfcfbb7a2da4266f925ff71c">球桶</a>|</span><span><a href="https://cad.onshape.com/documents/15e7b2b6610857fd978f626a/w/89c7066d9571d20450730429/e/4182c488ced799f50ceab2a3">引球圓盤</a></span></p>
<h4>主體</h4>
<p><img alt="" height="235" src="/images/主體-4.png" width="350"/></p>
<p><img alt="" height="300" src="/images/主體-1.png" width="350"/></p>
<p><img alt="" height="269" src="/images/主體-2.png" width="350"/></p>
<p><img alt="" height="246" src="/images/主體-3.png" width="350"/></p>
<h4>引球圓盤</h4>
<p><img alt="" height="88" src="/images/引球圓盤-1.png" width="350"/></p>
<p><img alt="" height="265" src="/images/引球圓盤-2.png" width="350"/></p>
<p><img alt="" height="313" src="/images/引球圓盤-3.png" width="350"/></p>
<h4>球桶</h4>
<p><img alt="" height="254" src="/images/球桶-1.png" width="350"/></p>
<p><img alt="" height="322" src="/images/球桶-2.png" width="350"/></p>
<h4>球</h4>
<p><img alt="" height="247" src="/images/球.png" width="250"/></p>
<h3>分組開會紀錄</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/dLK8QT6gpw8" width="560"></iframe></p>
<h2>W4</h2>
<h3>PDF</h3>
<p><a href="/downloads/2021-協同產品設計實習-stage1-ag14.pdf">2021-協同產品設計實習-stage1-ag14.pdf</a></p>
<h1>發球機版本</h1>
<h2>第1版</h2>
<p><marquee behavior="alternate" bgcolor="#FF8CFF" direction="left" scrollamount="1" width="350"><a href="/downloads/組合件.stl">組合件.stl</a>|<a href="/downloads/球體.stl">球體.stl</a>|<a href="/downloads/主體.stl">主體.stl</a>|<a href="/downloads/球桶.stl">球桶.stl</a>|<a href="/downloads/引球圓盤.stl">引球圓盤.stl</a></marquee></p>
<p><a href="https://drive.google.com/file/d/1RdYJgX-CONyUPgHzvj-qGBmiZoA7tIm9/view?usp=sharing">發射滾輪測試.ttt</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/p66UvX3NPIU" width="560"></iframe></p>
<p><strong>CoppeliaSim測試時的問題</strong></p>
<p><strong>這個問題我有兩個猜測:</strong></p>
<ol>
<ol>
<li><strong>我認為是因為主體的孔跟轉盤的軸接的太緊了，也許</strong><strong>只要把其中的一個修改的小一點就可以了</strong></li>
<li><strong>我認為是轉盤的軸跟轉盤是一體的所以導致轉盤的軸跟coppeliaSim的軸衝突導致,也許<strong>只要把轉盤跟軸分開就可以了</strong></strong></li>
</ol>
</ol>
<p><a href="https://drive.google.com/file/d/1h-w_S60VLdSOlxDe9UeUbPbxfoGVpjHd/view?usp=sharing">圓盤與主體的錯誤.ttt</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/GUHDy4NxUF4" width="560"></iframe></p>
<p><img alt="" height="267" src="/images/錯誤1.png" width="500"/></p>
<h2>第2版</h2>
<p><marquee behavior="alternate" bgcolor="#FF5959" direction="up" height="35" scrollamount="1.5" width="300"><a href="/downloads/組合圖-2.stl">組合圖-2.stl</a>|<a href="/downloads/發球機主體-2.stl">發球機主體-2.stl</a>|<a href="/downloads/引球圓盤-2.stl">引球圓盤-2.stl</a></marquee></p>
<p><a href="https://drive.google.com/file/d/1GsmMkOOK3HrquF32gm09deCQAFWCTjaf/view?usp=sharing">發球機組合圖-2.ttt</a></p>
<p>在發球機的引球圓盤旋轉時，<span>引球圓盤會微微的上下震動:</span></p>
<p>    我認為<span>引球圓盤跟轉軸是一體的，所以引球圓盤的軸跟主體的孔接觸導致引球圓盤會微微的上下震動，我猜測只要將引球圓盤的軸獨立出來就可以解決這個問題</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/fvoF_d6DNsk" width="560"></iframe></p>
<h2>第3版</h2>
<p><marquee behavior="alternate" bgcolor="#B5B5B5" direction="right" scrollamount="1" width="350"><a href="/downloads/組合圖-3.stl">組合圖-3.stl</a>|<a href="/downloads/主體-3.stl">主體-3.stl</a>|<a href="/downloads/引球圓盤-3.stl">引球圓盤-3.stl</a>|<a href="/downloads/軸承-3.stl">軸承-3.stl</a></marquee></p>
<p><a href="https://drive.google.com/file/d/17N-8ABgMcNleLfhRX5221DyTr4VL6H80/view?usp=sharing">發球機組合圖-3.ttt</a></p>
<p>我們將引球圓盤跟轉軸分開後，<span>引球圓盤就可以正常轉動了，不過軸太短了導致引球圓盤跟主體的發球孔會卡住，只要將軸加長就可以解決</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ghPPEBOKs_M" width="560"></iframe></p>
<h2>第4版</h2>
<p><marquee behavior="alternate" direction="down" height="35" scrollamount="1"><a href="/downloads/組合圖-4.stl">組合圖-4.stl</a>|<a href="/downloads/軸承-4.stl">軸承-4.stl</a></marquee></p>
<p><a href="https://drive.google.com/file/d/1B8iossbDZBjO3TzLTAwdVh5GZbnrD1Vg/view?usp=sharing">發球機-4.ttt</a></p>
<p><a href="https://drive.google.com/file/d/1qfLpAu2GxdC1gHiTFI4z8q3CFVKeD7Fy/view?usp=sharing">發球機-4-1.ttt</a></p>
<p>我們將軸加長後，引球圓盤就可以正常轉動了</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/bHb0nsadlYw" width="560"></iframe></p>
<p>但是在要將球完整的引導至發球機的軌道裡，會不斷跳動</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Ifhj4b9HIeQ" width="560"></iframe></p>
<h2>第5版</h2>
<p><marquee behavior="alternate" direction="down" height="35" scrollamount="1"><a href="/downloads/組合圖-5.stl">組合圖-5.stl</a>|<a href="/downloads/主體-5.stl">主體-5.stl</a>|<a href="/downloads/軸承-5.stl">軸承-5.stl</a></marquee></p>
<p><a href="https://drive.google.com/file/d/1V4W0suvDG40gUcVhBzYq3oN-ISx5U4qV/view?usp=sharing">發球機-5.ttt</a></p>
<p>我們將發球機的軌道移到後面，不過跟第4個版本一樣球和圓盤無法將球正確的引至發球軌道上</p>
<p>我認為是球、圓盤、球桶的設定沒有設定好</p>
<p><img alt="" height="328" src="/images/主體第2版.png" width="500"/></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/NF6CfldrYS0" width="560"></iframe></p>
<h1>Stage2-ag12</h1>
<p><strong>倉儲</strong>:</p>
<p><a href="https://github.com/40823125/stage2-ag12"><img alt="" height="210" src="/images/github-mark.png" width="400"/><span></span></a> </p>
<p><strong>網站</strong>:</p>
<p><a href="https://40823125.github.io/stage2-ag12/content/index.html"><img alt="" height="210" src="/images/social.jpg" width="400"/></a></p>
<p>組員</p>
<p><span><span> </span></span><a href="http://github.com/40823152/cd2021">40823152 repo</a><span><span> </span>|<span> </span></span><a href="http://40823152.github.io/cd2021">40823152 site</a><span><span> </span>|</span></p>
<p><span><span> </span></span><a href="http://github.com/40823153/cd2021">40823153 repo</a><span><span> </span>|<span> </span></span><a href="http://40823153.github.io/cd2021">40823153 site</a><span><span> </span>|</span></p>
<p><span><span> </span></span><a href="http://github.com/40823110/cd2021">40823110 repo</a><span><span> </span>|<span> </span></span><a href="http://40823110.github.io/cd2021">40823110 site</a> |</p>
<h2>W5</h2>
<p><img alt="" height="803" src="/images/Screenshot 2021-04-15 155510.png" width="600"/></p>
<h2>產品目標</h2>
<p>主題:籃球機 二代</p>
<p></p>
<p>動機:</p>
<p>第一次小組產品的籃球機只能自己轉動無法控制，所以二代的籃球機目標增加案件控制轉動。</p>
<p></p>
<p>製作規劃:</p>
<p>w5:確認主題，工作分配</p>
<p></p>
<p>w6:尋找lua程式與<span>coppeliaSim 文章</span>，並且使用lua程式控制軸在coppeliaSim裡模擬，籃球機外觀修整。</p>
<p></p>
<p>w7:完成按鍵控制程式與模擬<span>，籃球機外觀修整。</span></p>
<p><span></span></p>
<p>w8:除錯與修整，完成簡報與pdf</p>
<p></p>
<p>w9:報告</p>
<p><a href="https://40823152.github.io/stage2-ag12/content/index.html"></a></p>
<h2>W7</h2>
<h3>Heroku 網站建立</h3>
<p><a href="https://stage2-ag12.herokuapp.com/content/index.html">stage2-ag12-heroku網站</a></p>
<p><strong>1.開通 Heroku 帳號(用學校email建立)</strong></p>
<p><strong>2.建立一個 Herokuapp</strong></p>
<p><span><img alt="" height="67" src="https://40823125.github.io/stage2-ag12/images/%7B68C6F089-A793-4C19-B511-A8B3C2DCE5BC%7D.png.jpg" width="500"/></span></p>
<p><strong>3.從 <a href="http://a.kmol.info:88/heroku.7z">http://a.kmol.info:88/heroku.7z</a> 下載 Heroku cli 程式檔案, 解開至隨身碟 Y: </strong></p>
<p><span><img alt="" height="290" src="https://40823125.github.io/stage2-ag12/images/%7BFE3C529C-B49F-42FA-B86C-929A8472E38A%7D.png.jpg" width="500"/></span></p>
<p><strong>4.修改隨身系統的啟動批次檔案start.bat:</strong></p>
<p><span><img alt="" height="609" src="https://40823125.github.io/stage2-ag12/images/%7B0D3144F0-DFF0-4604-AAF5-C6FB00B9EF3C%7D.png.jpg" width="500"/></span></p>
<p><strong>5.測試是否能夠在修改後的命令列中執行 heroku.exe, 輸入 heroku version 若回應所使用的版本表示上述路徑設定已經成功</strong></p>
<p><strong><img alt="" height="63" src="https://40823125.github.io/stage2-ag12/images/1.jpg" width="500"/></strong></p>
<p><strong>6.有proxy的話，需要<span>在 start_ipv6.bat 中加入:</span></strong></p>
<div>
<div class="syntaxhighlighter html" id="highlighter_974800">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">REM for heroku login</code></div>
<div class="line number2 index1 alt1"><code class="html plain">set HTTP_PROXY=http://[2001:288:6004:17::53]:3128</code></div>
<div class="line number3 index2 alt2"><code class="html plain">set HTTPS_PROXY=http://[2001:288:6004:17::53]:3128</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><strong>7.<span>針對利用 Heroku 同步 Github Pages 上的網站內容</span></strong></p>
<p><strong><span><img alt="" height="57" src="https://40823125.github.io/stage2-ag12/images/2.jpg" width="500"/></span></strong></p>
<p><strong><span>8.</span></strong></p>
<div>
<div class="syntaxhighlighter html" id="highlighter_538450">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain"># 以 interactive 模式登入 Heroku, 完成後產生 y:\home_ipv6\_netrc</code></div>
<div class="line number2 index1 alt1"><code class="html plain">heroku login -i</code></div>
<div class="line number3 index2 alt2"><code class="html plain"># 針對已經登入的 Heroku 帳號下的 app, 設為此倉儲的 remote 同步倉儲, 且在倉儲中會自建名稱為 heroku 的 remoate site.</code></div>
<div class="line number4 index3 alt1"><code class="html plain">heroku git:remote -a 名稱</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<h2>W9</h2>
<p><strong>協同報告</strong></p>
<p><a href="https://40823153.github.io/stage2-ag12/downloads/2021-協同產品設計實習-stage2-ag12.pdf">2021-協同產品設計實習-stage2-ag12.pdf</a></p>
<h1>籃球機版本</h1>
<h2>版本一</h2>
<p><a href="https://drive.google.com/drive/folders/1GhgbMJbaKh2e0Zb0xjlF-sdGHJVy5C8D?usp=sharing">籃球機 1.4</a></p>
<p><a href="https://drive.google.com/file/d/1vWfztZrbkWKIqTI-B5sKLRIM5YI0OJST/view?usp=sharing">coppeliaSim模擬:版本1.4</a></p>
<p><span>因為版本2在</span><span>coppeliaSim裡被自動放大10倍，所以版本3無法擊中籃框，所以在<span>coppeliaSim裡</span>版本4放大10後就能擊中籃框。</span></p>
<p><img alt="" height="350" src="https://40823152.github.io/stage1-ag21/images/%E7%B1%83%E7%90%83%E6%A9%9F4.jpg" width="700"/></p>
<p></p>
<p>因為版本2在<span>coppeliaSim裡被自動放大10倍，所以版本3無法擊中籃框，所以版本4放大10後就能擊中籃框。</span></p>
<p>可調性</p>
<p><img caption="false" height="450" src="https://40823152.github.io/stage1-ag21/images/%E7%B1%83%E7%90%83%E6%A9%9F4%E8%AA%BF%E5%B0%BA%E5%AF%B8%20.jpg" width="700"/></p>
<p></p>
<p><img caption="false" height="450" src="https://40823152.github.io/stage1-ag21/images/%E7%B1%83%E7%90%83%E6%A9%9F4%E8%AA%BF%E5%B0%BA%E5%AF%B82%20.jpg" width="700"/></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/y-ztP91swPs" width="560"></iframe></p>
<h2>版本二</h2>
<h3>2.1</h3>
<p><a href="https://drive.google.com/drive/folders/1wxw3JJsXfnXkaYdWfED0NG7M9g2PI26I?usp=sharing">籃球機2.1</a></p>
<p><img alt="" height="239" src="/images/2.1-1.jpg" width="500"/></p>
<p><img alt="" height="240" src="/images/2.1-2.jpg" width="500"/></p>
<h3>2.2</h3>
<p><a href="https://drive.google.com/drive/folders/1zqnQdyXmb-uHGltAk5lSACNNUaOuthIN?usp=sharing">籃球機2.2</a></p>
<p><strong>無框版</strong></p>
<p><img caption="false" height="237" src="/images/2.2-1.jpg" width="500"/></p>
<p><img alt="" height="237" src="/images/2.2-2.jpg" width="500"/></p>
<p><img alt="" height="239" src="/images/2.2-3.jpg" width="500"/></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/fPKHOBXYZwY" width="560"></iframe></p>
<h4><strong>有框版</strong></h4>
<p><img alt="" height="236" src="/images/2.2-4.jpg" width="500"/></p>
<p><img alt="" height="238" src="/images/2.2-5.jpg" width="500"/></p>
<h3>2.3</h3>
<p><a href="https://drive.google.com/drive/folders/1gVL4FmbeqfpH1UVUGS85cwdQSOvvy683?usp=sharing">籃球機2.3</a></p>
<p><img alt="" height="238" src="/images/2.3-1.jpg" width="500"/></p>
<p><img alt="" height="238" src="/images/2.3-2.jpg" width="500"/></p>
<p><span style="font-weight: 400;">CoppeliaSim v-rep 連桿運動問題</span></p>
<p><span style="font-weight: 400;">一開始在CoppeliaSim上模擬發現模型無法順利地運轉</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kpUwzR1XGkY" width="560"></iframe></p>
<p><span style="font-weight: 400;">CoppeliaSim v-rep 連桿運動問題 解決</span></p>
<p><span style="font-weight: 400;">後來才發現原來是尺寸的問題</span></p>
<p><span style="font-weight: 400;">由於coppliasim對與尺寸可能無法到inventor那麼精準所以要預留空隙,才能順利運轉</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/97fUChcmisk" width="560"></iframe></p>
<h3>2.4</h3>
<p><a href="https://drive.google.com/drive/u/2/folders/1XVRti_HtuKFJgPpvFl1Ar3qx7v50zjCz">籃球機2.4</a></p>
<p><strong>2.4.1</strong></p>
<p><img alt="" height="237" src="/images/2.4-1.jpg" width="500"/></p>
<p><img alt="" height="237" src="/images/2.4-2.jpg" width="500"/></p>
<p><strong>2.4.2</strong></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/C-K8pxvnJJE" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/w2pv5GlT988" width="560"></iframe></p>
<p><strong>2.4.3</strong></p>
<p>擊球桿新增後轉功能，可以有效控制擊球的時機。</p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/R4FlyPlJxqw" width="560"></iframe></p>
<h1>ssh</h1>
<p>ssh建立:</p>
<p>建立公鑰(public key)</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_690020">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">打exit可以離開sh模式</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="184" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2020-09-27 200842.png" width="350"/></p>
<p>設定儲存路徑</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_190135">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">/y(目錄名)/home(資料夾名稱)/.ssh(創建的資料夾名稱)/40823125(創建的檔案名)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="183" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2020-09-27 201119.png" width="350"/></p>
<p>載入</p>
<p><img alt="" height="321" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2020-09-27 201515.png" width="350"/></p>
<p><img alt="" height="217" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2020-09-27 201601.png" width="350"/></p>
<p>創建密鑰(private key)(ppk檔)</p>
<p><img alt="" height="315" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2020-09-27 201704.png" width="350"/></p>
<p>設定github ssh key</p>
<p><img alt="" height="239" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2020-09-27 201750.png" width="350"/></p>
<p><img alt="" height="188" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2020-09-27 201954.png" width="350"/></p>
<p>設定putty</p>
<p><img alt="" height="246" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2020-09-27 203300.png" width="350"/></p>
<p><img alt="" height="316" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2021-01-14 230801.png" width="350"/></p>
<p><img alt="" height="315" src="https://40823125.github.io/cad2020/images/螢幕擷取畫面 2021-01-14 230817.png" width="350"/></p>
<p>加入到.ssh中取名為config</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_775556">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">ProxyCommand y:</code><code class="py keyword">/</code><code class="py plain">putty</code><code class="py keyword">/</code><code class="py plain">plink.exe github.com </code><code class="py keyword">%</code><code class="py plain">h </code><code class="py keyword">%</code><code class="py plain">p</code></div>
<div class="line number2 index1 alt1"><code class="py spaces"> </code> </div>
<div class="line number3 index2 alt2"><code class="py plain">Host github.com</code></div>
<div class="line number4 index3 alt1"><code class="py spaces">    </code><code class="py plain">User git</code></div>
<div class="line number5 index4 alt2"><code class="py spaces">    </code><code class="py plain">Port </code><code class="py value">22</code></div>
<div class="line number6 index5 alt1"><code class="py spaces">    </code><code class="py plain">Hostname github.com</code></div>
<div class="line number7 index6 alt2"><code class="py spaces"> </code> </div>
<div class="line number8 index7 alt1"><code class="py spaces">    </code><code class="py plain">TCPKeepAlive yes</code></div>
<div class="line number9 index8 alt2"><code class="py spaces">    </code><code class="py plain">IdentitiesOnly yes</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>將cad2020中.git目錄下的config改為</p>
<div>
<div class="syntaxhighlighter html" id="highlighter_293516">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">#url = https://github.com/40823125/cad2020.git</code></div>
<div class="line number2 index1 alt1"><code class="html spaces">    </code><code class="html plain">url = git@github.com:40823125/cad2020.git</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<h1>Error exclude</h1>
<p>協同失誤</p>
<p>在協同時因為組員們的倉儲版本不同導致無法推送</p>
<p><img caption="false" height="101" src="/images/螢幕擷取畫面 2021-04-13 194559.jpg" width="450"/></p>
<p>最後我們只好將版本不同的倉儲刪掉重新協同</p>
<p><img alt="" height="261" src="https://40823125.github.io/stage2-ag12/images/Inked%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202021-04-01%20170231_LI.jpg" width="500"/></p>
<h1>stage3-ag6</h1>
<p><strong>倉儲</strong>:</p>
<p><a href="https://github.com/40823125/stage3-ag6"><img alt="" height="210" src="/images/github-mark.png" width="400"/><span></span></a> </p>
<p><strong>網頁</strong>:</p>
<p><a href="https://40823125.github.io/stage3-ag6/content/index.html"><img alt="" height="153" src="/images/what-is-github-and-what-is-it-used-for-1.png" width="400"/></a><span></span></p>
<p>組長:<a href="https://github.com/40823152/cd2021">40823152 repo</a><span> | </span><a href="https://40823152.github.io/cd2021/content/index.html">40823152 site</a><span> |</span></p>
<p>組員:</p>
<p><a href="https://github.com/40823110/cd2021">40823110 repo</a><span> | </span><a href="https://40823110.github.io/cd2021/content/index.html">40823110 site</a><span> </span>|</p>
<p><span></span><a href="https://github.com/40823153/cd2021">40823153 repo</a><span><span> </span>|<span> </span></span><a href="https://40823153.github.io/cd2021/content/index.html">40823153 site</a><span><a href="https://40823153.github.io/cd2021/content/index.html"><span> </span></a>|</span></p>
<p><span><a href="https://github.com/40823117/cd2021">40823117 repo<span> </span></a>|<span> </span><a href="https://40823117.github.io/cd2021/content/index.html">40823117 site</a><span> </span>|</span></p>
<p><span><a href="https://github.com/40823122/cd2021">40823122 repo<span> </span></a>|<span> </span><a href="https://40823122.github.io/cd2021/content/index.html">40823122 site</a><span> </span>|</span></p>
<p><span><a href="https://github.com/40823129/cd2021">40823129 repo<span> </span></a>|<span> </span><a href="https://40823129.github.io/cd2021/content/index.html">40823129 site</a><span> </span>|</span></p>
<p><span><a href="https://github.com/40823149/cd2021">40823149 repo<span> </span></a>|<span> </span><a href="https://40823149.github.io/cd2021/content/index.html">40823149 site<span> </span></a>|</span></p>
<h2>task 1</h2>
<p>讀取 <a href="https://drive.google.com/file/d/1HETcW6z9bweibVH37jiziNbT71E8dgVU/view?usp=sharing">stage3_2a.txt</a>, 建立 Stage3 的分組倉儲, 分組網頁, 以及各組員倉儲及網頁連結.</p>
<p><strong>老師的範例</strong>:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># open file, default is read mode, since txt content no chinese char
# no encoding = "UTF-8" is needed
with open("stage3_2a.txt") as fh:
    # readlines will read into the whole line and put into list format
    # has \n at the end of each line
    data = fh.readlines()
#print(len(data))
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    print(group)
# the following will use group data to generate needed html</pre>
<p><strong>第一版</strong>:將學號按組別排好</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">with open("stage3_2a.txt") as fh:
   #先將我們存起來stage3_2a.txt打開並命名為fh
    data = fh.readlines()
    #將stage3_2a.txt的資料以串列形式存為data
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    #先取出data list中的第i項,消除元素中/n,再以\t取出需要的文字
    print(group[0]+'|'+group[0])
    #先將group第0列推出
    for j in range(1,18,1):
    #設一個範圍,(1到18,每次加1,1&lt;=j&lt;18)
        try:
            print(group[j])
        except:
           continue
        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑</pre>
<p><strong>第二版</strong>:將40823122的學號修正</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">with open("stage3_2a.txt") as fh:
   #先將我們存起來stage3_2a.txt打開並命名為fh
    data = fh.readlines()
    #將stage3_2a.txt的資料以串列形式存為data
for i in range(len(data)):
    newdata = data[i].replace('4823122','40823122')
    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的
    group = newdata.rstrip("\n").split("\t")
    #先取出newdata list中的第i項,消除元素中/n,再以\t取出需要的文字
    print(group[0]+'|'+group[0])
    #先將group第0列推出
    for j in range(1,18,1):
    #設一個範圍,(1到18,每次加1,1&lt;=j&lt;18)
        try:
            print(group[j])
        except:
           continue
        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑</pre>
<p><strong>第三版</strong>:以網頁的形式推出,但會告知</p>
<p>print('&lt;p&gt;'+group[0]+' | &lt;a href="https://'+group[1]+'.github.io/'+group[0]+'"&gt;Website&lt;/a&gt; | &lt;a href="https://github.com/'+group[2]+'/'+group[0]+'"&gt;Repository&lt;/a&gt;&lt;/p&gt;')<br/>IndexError: list index out of range</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">with open("stage3_2a.txt") as fh:
   #先將我們存起來stage3_2a.txt打開並命名為fh
    data = fh.readlines()
    #將stage3_2a.txt的資料以串列形式存為data
for i in range(len(data)):
    newdata = data[i].replace('4823122','40823122')
    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的
    group = newdata.rstrip("\n").split("\t")
    #先取出newdata list中的第i項,消除元素中/n,再以\t取出需要的文字
    print('&lt;p&gt;'+group[0]+' | &lt;a href="https://'+group[1]+'.github.io/'+group[0]+'"&gt;Website&lt;/a&gt; | &lt;a href="https://github.com/'+group[2]+'/'+group[0]+'"&gt;Repository&lt;/a&gt;&lt;/p&gt;')
    for j in range(1,18,2):
    #設一個範圍,(1到18,每次+2,1&lt;=j&lt;18)
        try:
            print('&lt;p&gt;'+group[j]+' | Website:'+'&lt;a href="https://'+group[j]+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+' | Repository:'+'&lt;a href="https://github.com/'+group[j]+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt; &lt;/p&gt;')
        except:
           continue
        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑</pre>
<p><strong>第四版</strong>:將a40823112和stage3_ag修正</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">with open("stage3_2a.txt") as fh:
   #先將我們存起來stage3_2a.txt打開並命名為fh
    data = fh.readlines()
    #將stage3_2a.txt的資料以串列形式存為data
for i in range(6):
    #將次數限定就不會告知list index out of range了
    newdata1 = data[i].replace('4823122','40823122')
    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的
    newdata2 = newdata1.replace('\t\t','')
    #因為有一組只有6人,所以用 replace 把空位刪除
    newdata3 = newdata2.replace('_','-')
    #因為在編輯txt的時候-會變成_,所以用 replace 把_修正為-
    group = newdata3.rstrip("\n").split("\t")
    #先取出newdata list中的第i項,消除元素中/n,再以\t取出需要的文字
    print('&lt;p&gt;'+group[0]+' | &lt;a href="https://'+group[1]+'.github.io/'+group[0]+'"&gt;Website&lt;/a&gt; | &lt;a href="https://github.com/'+group[2]+'/'+group[0]+'"&gt;Repository&lt;/a&gt;&lt;/p&gt;')
    for j in range(1,18,2):
    #設一個範圍,(1到18,每次+2,1&lt;=j&lt;18)
        try:
            n = group[j].replace('40823112','a40823112')
            #因為40823112的github帳號是a40823112,所以用 replace 把帳號修正
            print('&lt;p&gt;'+group[j]+' | Website:'+'&lt;a href="https://'+n+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+' | Repository:'+'&lt;a href="https://github.com/'+n+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt; &lt;/p&gt;')
        except:
           continue
        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑</pre>
<p><strong>第五版</strong>:將連結以老師常用的形式推出</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">with open("stage3_2a.txt") as fh:
   #先將我們存起來stage3_2a.txt打開並命名為fh
    data = fh.readlines()
    #將stage3_2a.txt的資料以串列形式存為data
for i in range(6):
    #將次數限定就不會告知list index out of range了
    newdata1 = data[i].replace('4823122','40823122')
    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的
    newdata2 = newdata1.replace('\t\t','')
    #因為有一組只有6人,所以用 replace 把空位刪除
    newdata3 = newdata2.replace('_','-')
    #因為在編輯txt的時候-會變成_,所以用 replace 把_修正為-
    group = newdata3.rstrip("\n").split("\t")
    #先取出newdata list中的第i項,消除元素中/n,再以\t取出需要的文字
    print('&lt;p&gt;&lt;a href="https://github.com/'+group[1]+'/'+group[0]+'"&gt;'+group[0]+' repo&lt;/a&gt; | &lt;a href="https://'+group[2]+'.github.io/'+group[0]+'"&gt;'+group[0]+' site&lt;/a&gt;&lt;/p&gt;')
    for j in range(1,18,2):
    #設一個範圍,(1到18,每次+2,1&lt;=j&lt;18)
        try:
            n = group[j].replace('40823112','a40823112')
            #因為40823112的github帳號是a40823112,所以用 replace 把帳號修正
            print('&lt;p&gt;'+'&lt;a href="https://github.com/'+n+'/cd2021"&gt;'+group[j]+' repo&lt;/a&gt; | &lt;a href="https://'+n+'.github.io/cd2021"&gt;'+group[j]+' site&lt;/a&gt;&lt;/p&gt;')
        except:
           continue
        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑</pre>
<p>Anti-piracy system:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">with open("stage3_2a.txt") as fh:
   #先將我們存起來stage3_2a.txt打開並命名為fh
    data = fh.readlines()
    #將stage3_2a.txt的資料以串列形式存為data
for i in range(6):
    #將次數限定就不會告知list index out of range了
    newdata1 = data[i].replace('4823122','40823122')
    #因為40823122的學號打錯了,所以用 replace 把舊的替換成新的
    newdata2 = newdata1.replace('\t\t','')
    #因為有一組只有6人,所以用 replace 把空位刪除
    group = newdata3.rstrip("\n").split("\t")
    #先取出newdata list中的第i項,消除元素中/n,再以\t取出需要的文字
    print('&lt;p&gt;&lt;a href="https://github.com/'+group[1]+'/'+group[0]+'"&gt;'+group[0]+' repo&lt;/a&gt; | &lt;a href="https://'+group[2]+'.github.io/'+group[0]+'"&gt;'+group[0]+' site&lt;/a&gt;&lt;/p&gt;')
    for j in range(1,18,2):
    #設一個範圍,(1到18,每次+2,1&lt;=j&lt;18)
        try:
            n = group[j].replace('40823112','a40823112')
            n = group[j].replace('4082312','40823125')
            print('&lt;p&gt;'+'&lt;a href="https://github.com/'+n+'/cd2021"&gt;'+group[j]+' repo&lt;/a&gt; | &lt;a href="https://'+n+'.github.io/cd2021"&gt;'+group[j]+' site&lt;/a&gt;&lt;/p&gt;')
        except:
           continue
        #這邊使用try.....except,因為有一組6個人,導致有空格,所以需要用continue讓迴圈繼續跑</pre>
<p><br/>參考資料:</p>
<p><a href="https://docs.python.org/zh-tw/3/tutorial/controlflow.html#the-range-function">python 語法 renge</a></p>
<p><a href="https://edu.tcfst.org.tw/edm/08C009/images/Python%E5%9F%BA%E6%9C%AC%E8%AA%9E%E6%B3%95.pdf">python 基本語法</a></p>
<p><a href="https://www.w3schools.com/python/python_lists_loop.asp">python loop 原理</a></p>
<p><a href="https://40823136.github.io/cd2021/content/task1.html">40823136 Website</a></p>
<h3>stage3-2a</h3>
<p><a href="https://github.com/40823131/stage3-ag1">stage3-ag1 repo</a> | <a href="https://40823131.github.io/stage3-ag1">stage3-ag1 site</a></p>
<p><a href="https://github.com/40823131/cd2021">40823131 repo</a> | <a href="https://40823131.github.io/cd2021">40823131 site</a></p>
<p><a href="https://github.com/a40823112/cd2021">40823112 repo</a> | <a href="https://a40823112.github.io/cd2021">40823112 site</a></p>
<p><a href="https://github.com/40823123/cd2021">40823123 repo</a> | <a href="https://40823123.github.io/cd2021">40823123 site</a></p>
<p><a href="https://github.com/40823145/cd2021">40823145 repo</a> | <a href="https://40823145.github.io/cd2021">40823145 site</a></p>
<p><a href="https://github.com/40823136/cd2021">40823136 repo</a> | <a href="https://40823136.github.io/cd2021">40823136 site</a></p>
<p><a href="https://github.com/40823109/cd2021">40823109 repo</a> | <a href="https://40823109.github.io/cd2021">40823109 site</a></p>
<p><a href="https://github.com/40823116/cd2021">40823116 repo</a> | <a href="https://40823116.github.io/cd2021">40823116 site</a></p>
<p><a href="https://github.com/40823108/cd2021">40823108 repo</a> | <a href="https://40823108.github.io/cd2021">40823108 site</a></p>
<p><a href="https://github.com/40823151/stage3-ag2">stage3-ag2 repo</a> | <a href="https://40823151.github.io/stage3-ag2">stage3-ag2 site</a></p>
<p><a href="https://github.com/40823151/cd2021">40823151 repo</a> | <a href="https://40823151.github.io/cd2021">40823151 site</a></p>
<p><a href="https://github.com/40623121/cd2021">40623121 repo</a> | <a href="https://40623121.github.io/cd2021">40623121 site</a></p>
<p><a href="https://github.com/40871106/cd2021">40871106 repo</a> | <a href="https://40871106.github.io/cd2021">40871106 site</a></p>
<p><a href="https://github.com/40823102/cd2021">40823102 repo</a> | <a href="https://40823102.github.io/cd2021">40823102 site</a></p>
<p><a href="https://github.com/40823104/cd2021">40823104 repo</a> | <a href="https://40823104.github.io/cd2021">40823104 site</a></p>
<p><a href="https://github.com/40823106/cd2021">40823106 repo</a> | <a href="https://40823106.github.io/cd2021">40823106 site</a></p>
<p><a href="https://github.com/40823101/cd2021">40823101 repo</a> | <a href="https://40823101.github.io/cd2021">40823101 site</a></p>
<p><a href="https://github.com/40823132/cd2021">40823132 repo</a> | <a href="https://40823132.github.io/cd2021">40823132 site</a></p>
<p><a href="https://github.com/40823119/stage3-ag3">stage3-ag3 repo</a> | <a href="https://40823119.github.io/stage3-ag3">stage3-ag3 site</a></p>
<p><a href="https://github.com/40823119/cd2021">40823119 repo</a> | <a href="https://40823119.github.io/cd2021">40823119 site</a></p>
<p><a href="https://github.com/40823150/cd2021">40823150 repo</a> | <a href="https://40823150.github.io/cd2021">40823150 site</a></p>
<p><a href="https://github.com/40823103/cd2021">40823103 repo</a> | <a href="https://40823103.github.io/cd2021">40823103 site</a></p>
<p><a href="https://github.com/40823107/cd2021">40823107 repo</a> | <a href="https://40823107.github.io/cd2021">40823107 site</a></p>
<p><a href="https://github.com/40523252/cd2021">40523252 repo</a> | <a href="https://40523252.github.io/cd2021">40523252 site</a></p>
<p><a href="https://github.com/40823154/cd2021">40823154 repo</a> | <a href="https://40823154.github.io/cd2021">40823154 site</a></p>
<p><a href="https://github.com/40823142/stage3-ag4">stage3-ag4 repo</a> | <a href="https://40823142.github.io/stage3-ag4">stage3-ag4 site</a></p>
<p><a href="https://github.com/40823142/cd2021">40823142 repo</a> | <a href="https://40823142.github.io/cd2021">40823142 site</a></p>
<p><a href="https://github.com/40823144/cd2021">40823144 repo</a> | <a href="https://40823144.github.io/cd2021">40823144 site</a></p>
<p><a href="https://github.com/40823127/cd2021">40823127 repo</a> | <a href="https://40823127.github.io/cd2021">40823127 site</a></p>
<p><a href="https://github.com/40823148/cd2021">40823148 repo</a> | <a href="https://40823148.github.io/cd2021">40823148 site</a></p>
<p><a href="https://github.com/40823121/cd2021">40823121 repo</a> | <a href="https://40823121.github.io/cd2021">40823121 site</a></p>
<p><a href="https://github.com/40823135/cd2021">40823135 repo</a> | <a href="https://40823135.github.io/cd2021">40823135 site</a></p>
<p><a href="https://github.com/40823114/cd2021">40823114 repo</a> | <a href="https://40823114.github.io/cd2021">40823114 site</a></p>
<p><a href="https://github.com/40823146/cd2021">40823146 repo</a> | <a href="https://40823146.github.io/cd2021">40823146 site</a></p>
<p><a href="https://github.com/40823111/stage3-ag5">stage3-ag5 repo</a> | <a href="https://40823111.github.io/stage3-ag5">stage3-ag5 site</a></p>
<p><a href="https://github.com/40823111/cd2021">40823111 repo</a> | <a href="https://40823111.github.io/cd2021">40823111 site</a></p>
<p><a href="https://github.com/40823115/cd2021">40823115 repo</a> | <a href="https://40823115.github.io/cd2021">40823115 site</a></p>
<p><a href="https://github.com/40823128/cd2021">40823128 repo</a> | <a href="https://40823128.github.io/cd2021">40823128 site</a></p>
<p><a href="https://github.com/40823120/cd2021">40823120 repo</a> | <a href="https://40823120.github.io/cd2021">40823120 site</a></p>
<p><a href="https://github.com/40823140/cd2021">40823140 repo</a> | <a href="https://40823140.github.io/cd2021">40823140 site</a></p>
<p><a href="https://github.com/40823124/cd2021">40823124 repo</a> | <a href="https://40823124.github.io/cd2021">40823124 site</a></p>
<p><a href="https://github.com/40823139/cd2021">40823139 repo</a> | <a href="https://40823139.github.io/cd2021">40823139 site</a></p>
<p><a href="https://github.com/40823126/cd2021">40823126 repo</a> | <a href="https://40823126.github.io/cd2021">40823126 site</a></p>
<p><a href="https://github.com/40823152/stage3-ag6">stage3-ag6 repo</a> | <a href="https://40823152.github.io/stage3-ag6">stage3-ag6 site</a></p>
<p><a href="https://github.com/40823152/cd2021">40823152 repo</a> | <a href="https://40823152.github.io/cd2021">40823152 site</a></p>
<p><a href="https://github.com/40823110/cd2021">40823110 repo</a> | <a href="https://40823110.github.io/cd2021">40823110 site</a></p>
<p><a href="https://github.com/40823122/cd2021">40823122 repo</a> | <a href="https://40823122.github.io/cd2021">40823122 site</a></p>
<p><a href="https://github.com/40823125/cd2021">40823125 repo</a> | <a href="https://40823125.github.io/cd2021">40823125 site</a></p>
<p><a href="https://github.com/40823117/cd2021">40823117 repo</a> | <a href="https://40823117.github.io/cd2021">40823117 site</a></p>
<p><a href="https://github.com/40823129/cd2021">40823129 repo</a> | <a href="https://40823129.github.io/cd2021">40823129 site</a></p>
<p><a href="https://github.com/40823149/cd2021">40823149 repo</a> | <a href="https://40823149.github.io/cd2021">40823149 site</a></p>
<p><a href="https://github.com/40823153/cd2021">40823153 repo</a> | <a href="https://40823153.github.io/cd2021">40823153 site</a></p>
<h2>task 2</h2>
<p>remote API 操作測試</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/WUDqe6oSfwo" width="560"></iframe></p>
<p>目前在用2W1a.ttt時沒辦法使用老師給的內部IP 192.168.192.1+組別+排序別,進行連線</p>
<h2>W13</h2>
<h3>gutlab</h3>
<p><a href="https://gitlab.com/40823125/cd2021">倉儲</a></p>
<p><a href="https://40823152.gitlab.io/cd2021/content/gutlab%E6%93%8D%E4%BD%9C.html">40823152 gutlab 教學</a></p><h3>gogs操作</h3>
<p><a href="https://fossil.kmol.info:3443/40823125/cd2021">倉儲</a></p>
<p>1.先用<a href="https://fossil.kmol.info:3443">https://fossil.kmol.info:3443</a>創新倉儲，與github倉儲相同的名稱</p>
<p><img alt="" height="257" src="/images/螢幕擷取畫面 2021-06-03 154013.jpg" width="500"/></p>
<p><img alt="" height="389" src="/images/螢幕擷取畫面 2021-06-03 154052.jpg" width="500"/></p>
<p>2.設定git remote add</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">git remote add fossil http://fossil.kmol.info:3000/學號/cd2021.git</pre>
<p>3.推送git push fossil</p>
<p>4.設定ssh(與github和gitlab相同)</p>
<p><img alt="" height="258" src="/images/螢幕擷取畫面 2021-06-03 154546.jpg" width="500"/></p>
<p>5.設定putty</p>
<p><img alt="" height="451" src="/images/螢幕擷取畫面 2021-06-03 155040.jpg" width="500"/></p>
<p></p>
<p></p><h2>W14</h2>
<h3>CoppeliaSim sensor</h3>
<p><a href="https://drive.google.com/file/d/1YOP5Q7wTjEPT15hSmSKPPZYY97R31b9S/view?usp=sharing">範例</a></p>
<p><a href="https://drive.google.com/drive/folders/1vnIIO4SSRHLAeuD9lmH6dk5QqLyOXn7e?usp=sharing">V-REP Inverse Kinematics Tutorial</a></p>
<p>參考資料:</p>
<p><a href="https://blog.csdn.net/qq_42703283/article/details/101428684"><span style="font-weight: 400;">CoppeliaSim：视觉传感器的使用与属性参数</span></a></p>
<p><a href="https://blog.csdn.net/qq_38587510/article/details/104399632"><span style="font-weight: 400;">Memos:V-REP/Coppeliasim视觉传感器的使用</span></a></p>
<p><a href="https://blog.csdn.net/Csdn_Darry/article/details/107142216"><span style="font-weight: 400;">CoppeliaSim 用户手册</span></a></p>
<p><span style="font-weight: 400;"><a href="https://github.com/youtubeSam/V-REP-Inverse-Kinematics">V-REP-Inverse-Kinematics</a></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Lr2Ah06mC54" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/JUiSZinyH1c" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Sf8E16EK6BQ" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/heNYjDOVcKY" width="560"></iframe></p><h2>W15</h2>
<h3>fossil 教學</h3>
<p><a href="https://fossil.kmol.info/u/40823125/dir?ci=tip">倉儲</a> | <a href="https://fossil.kmol.info/u/40823125/doc/trunk/content/index.html">網頁</a></p>
<p>進入<a href="https://fossil.kmol.info:9443/">https://fossil.kmol.info:9443</a> 登入學校email</p>
<p>在Y:\tmp\fossil&gt;下clone連結</p>
<p><img alt="" height="46" src="/images/螢幕擷取畫面 2021-06-16 201019.jpg" width="500"/></p>
<p>https://fossil.kmol.info/u/倉儲名稱/home</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">fossil clone https://倉儲名稱@fossil.kmol.info/u/倉儲名稱 倉儲名稱.fossil</pre>
<p>建立wd和cd2021的資料夾</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">mkdir wd
mkdir cd2021
cd wd\cd2021
fossil open ./../../倉儲名稱 .fossil
在cd2021開啟倉儲名稱 .fossil</pre>
<p>推送</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">fossil add .
只有新增物件時用
fossil addremove
有刪除物件時用</pre>
<p><img alt="" height="61" src="/images/螢幕擷取畫面 2021-06-16 195630.jpg" width="500"/></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">fossil commit -m "推送名稱"</pre>
<p>開啟網頁的連結</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">https://fossil.kmol.info/u/倉儲名稱/doc/trunk/index.html</pre>
<p></p><h3>Inverse kinematics for a 2-joint robot arm using geometry</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/IKOGwoJ2HLk" width="560"></iframe></p>
<p>We saw this simple two-link robot in the previous lecture about forward kinematics.</p>
<p>我們在上一堂關於正向運動學的講座中看到了這個簡單的雙連桿機構。</p>
<p>The tooltip pose of this robot is described simply by two numbers, the coordinates x and y with respect to the world coordinate frame.</p>
<p>該機器人的工具提示姿態由兩個數字簡單描述，即相對於世界坐標系的坐標 x 和 y。</p>
<p>So, the problem here is that given x and y, we want to determine the joined angles, Q1<br/>and Q2.</p>
<p>所以，這裡的問題是給定 x 和 y，我們要確定連接角 Q1<br/>和 Q2。</p>
<p>The solution that we’re going to follow in this particular section is a geometric<br/>one.</p>
<p>我們將在本節中遵循的解決方案是幾何解決方案。</p>
<p>We’re going to start with a simple piece of construction.</p>
<p>我們將從一個簡單的結構開始。</p>
<p>We’re going to overlay the red triangle on top of our robot.</p>
<p>我們將在機構頂部覆蓋紅色三角形。</p>
<p>We know that the end point coordinate is x, y, so the vertical height of the triangle is y,horizontal width is x.</p>
<p>我們知道終點坐標是x，y，所以三角形的垂直高度是y，水平寬度是x。</p>
<p>And, using Pythagoras theorem, we can write r squared equals x squared plus y squared.</p>
<p>並且，使用畢達哥拉斯定理，我們可以寫出 r 平方等於 x 平方加上 y 平方。</p>
<p>So far, so easy.</p>
<p>到目前為止，很容易。</p>
<p>Now, we’re going to look at this triangle highlighted here in red and we want to determine<br/>the angle alpha.</p>
<p>現在，我們將查看此處以紅色突出顯示的三角形，我們想確定<br/>角度α。</p>
<p>In order to do that, we need to use the cosine rule.</p>
<p>為了做到這一點，我們需要使用餘弦規則。</p>
<p>And, if you’re a little rusty on the cosine rule, here is a bit of a refresher.</p>
<p>而且，如果你對餘弦規則有點生疏，這裡有一點複習。</p>
<p>We have an arbitrary triangle.</p>
<p>我們有一個任意三角形。</p>
<p>We don't have to have any right angles in it and we're going to label the length of this edge as A and the angle opposite that edge, we're going to label as little a.</p>
<p>我們不必在其中有任何直角，我們將這條邊的長度標記為 A，而與該邊相對的角度，我們將標記為小 a。</p>
<p>And, we do the same for this edge and this angle, and this edge and this angle.</p>
<p>並且，我們對這條邊和這個角，以及這條邊和這個角做同樣的事情。</p>
<p>So, all together, the sides are labelled capitals A, B and C, and the angles are labelled little a, little b, and little c.</p>
<p>因此，所有邊都標記為大寫字母 A、B 和 C，角標記為小 a、小 b 和小 c。</p>
<p>So, the cosine rule is simply this relationship here.</p>
<p>所以，餘弦規則就是這裡的這種關係。</p>
<p>It's a bit like Pythagoras' theorem except for this extra term on the end with the cos a in it.</p>
<p>它有點像畢達哥拉斯的定理，除了最後一個額外的術語，其中有 cos a。</p>
<p>Now, let’s apply the cosine rule to the particular triangle we looked at a moment<br/>ago.</p>
<p>現在，讓我們將餘弦規則應用於我們剛才看到的特定三角形。</p>
<p>It’s pretty straightforward to write down this particular relationship.</p>
<p>寫下這種特殊關係非常簡單。</p>
<p>We can isolate the term cos alpha which gives us the angle alpha that we’re interested in.</p>
<p>我們可以分離出術語 cosα，它給出了我們感興趣的角度α。</p>
<p>And, it’s defined in terms of the constant link lengths, A1 and A2 and the position of the end effector, x and y.</p>
<p>而且，它是根據恆定連桿長度 A1 和 A2 以及末端執行器的位置 x 和 y 定義的。</p>
<p>We can write this simple relationship between the angles alpha and Q2.</p>
<p>我們可以寫出角度α和 Q2 之間的這種簡單關係。</p>
<p>And, we know from the shape of the cosine function that cos of Q2 must be equal to negative of cos alpha.</p>
<p>而且，我們從餘弦函數的形狀知道，Q2 的 cos 必須等於 cosα的負值。</p>
<p>This time, let’s just write an expression for the cosine of the joined angle Q2.</p>
<p>這一次，讓我們為連接角 Q2 的餘弦寫一個表達式。</p>
<p>Now, we're going to draw yet another red triangle and we're going apply some simple trigonometry here.</p>
<p>現在，我們將繪製另一個紅色三角形，並在此處應用一些簡單的三角函數。</p>
<p>If we know Q2, then we know this length and this length of the red triangle.</p>
<p>如果我們知道 Q2，那麼我們就知道這個長度和這個紅色三角形的長度。</p>
<p>We can write this relationship for the sine of the joined angle Q2.</p>
<p>我們可以為連接角 Q2 的正弦寫出這種關係。</p>
<p>Now, we can consider this bigger triangle whose angle is beta and this side length of the triangle is given here in blue.</p>
<p>現在，我們可以考慮這個更大的三角形，它的角是β，三角形的這條邊長在這裡用藍色給出。</p>
<p>And, the length of the other side of the triangle is this.</p>
<p>並且，三角形另一邊的長度是這個。</p>
<p>So, now we can write an expression for the angle beta in terms of these parameters here.</p>
<p>所以，現在我們可以在此處根據這些參數編寫角度β的表達式。</p>
<p>Going back to the red triangle that we drew earlier, we can establish a relationship between Q1 and the angle beta.</p>
<p>回到我們之前畫的紅色三角形，我們可以建立Q1和角度β之間的關係。</p>
<p>Introduce yet another angle, this one gamma and we can write a relationship between the angle gamma and the tooltip coordinates x and y.</p>
<p>引入另一個角度，這個<span face="新細明體" style="font-family: 新細明體;">γ</span>，我們可以寫出角度<span face="新細明體" style="font-family: 新細明體;">γ</span>和工具提示坐標 x 和 y 之間的關係。</p>
<p>Now, we can write a simple relationship between the angles that we've constructed, gamma and beta and the joined angle we're interested in which is Q1.</p>
<p>現在，我們可以在我們構建的角度<span face="新細明體" style="font-family: 新細明體;">γ</span>和β與我們感興趣的連接角度 Q1 之間寫出一個簡單的關係式。</p>
<p>And, the total relationship looks something like this.</p>
<p>而且，整個關係式看起來像這樣。</p>
<p>Quite a complex relationship, it gives us the angle of joined one, that's Q1 in terms of the end effector coordinates y and x, and a bunch of constants, a1 and a2, and it's also a function of the second joint angle, Q2.</p>
<p>相當複雜的關係，它為我們提供了連接的角度，即根據末端執行器坐標 y 和 x 的 Q1，以及一系列常量 a1 和 a2，它也是第二個關節角度 Q2 的方程式。</p>
<p>So, let’s summarize what it is that we have derived here.</p>
<p>所以，讓我們總結一下我們在這裡得出的結論。</p>
<p>We have an expression for the cosine of Q2 and we have an expression for Q1.</p>
<p>我們有 Q2 的餘弦表達式和 Q1 的表達式。</p>
<p>Now, the cosine function is symmetrical about 0.</p>
<p>現在，餘弦函數於 0 對稱。</p>
<p>So, if we know the value of the cosine of Q2, then there are two possible solutions, a positive angle and a negative angle.</p>
<p>所以，如果我們知道 Q2 的餘弦值，那麼有兩種可能的解，一個正角和一個負角。</p>
<p>We're going to explicitly choose the positive angle, which means that I can write this expression here.</p>
<p>我們將明確選擇正角，這意味著我可以在這裡寫這個表達式。</p>
<p>And now, we have what we call the inverse kinematic solution for this two-link robot.</p>
<p>現在，我們有了這個雙連桿機構的逆運動學解決方案。</p>
<p>We have an expression for the two joined angles, Q1 and Q2 in terms of the end effector pose x and y, and a bunch of constants.</p>
<p>我們有兩個連接角 Q1 和 Q2 的表達式，根據末端執行器姿勢 x 和 y 以及一系列常數。</p>
<p>You notice that the two equations are not independent.</p>
<p>你注意到這兩個方程不是獨立的。</p>
<p>The equation for Q1, in fact, depends on the solution for Q2.</p>
<p>事實上，Q1 的方程取決於 Q2 的解。</p>
<p>In this case, Q2 is negative and we're going to write the solution for Q2 with a negative sign in front of the inverse cosine.</p>
<p>在這種情況下，Q2 是負數，我們將在反餘弦前用負號編寫 Q2 的解。</p>
<p>Now, we need to solve for Q1, so we're going to introduce this particular red triangle, the angle beta that we solved previously, and the angle gamma which is defined in terms of y and x.</p>
<p>現在，我們需要求解 Q1，因此我們將介紹這個特定的紅色三角形、我們之前求解的角度β以及根據 y 和 x 定義的角度<span face="新細明體" style="font-family: 新細明體;">γ</span>。</p>
<p>Now, we write a slightly different relationship between q1, gamma and beta, different to what we had before.</p>
<p>現在，我們在 q1、<span face="新細明體" style="font-family: 新細明體;">γ</span>和β 之間寫出略有不同的關係式，與我們之前的關係式不同。</p>
<p>There’s a change of sign involved.</p>
<p>涉及到符號的變化。</p>
<p>Then, we can substitute all that previous equation and come up with this expression for q1.</p>
<p>然後，我們可以替換之前的所有等式，並得出 q1 的這個表達式。</p>
<p>Again, there is a change of sign here.</p>
<p>同樣，這裡的符號發生了變化。</p>
<p>Previously, this was a negative sign.</p>
<p>之前，這是一個負數。</p>
<p>And, here in summary form is the solution for the inverse kinematics of our two-link robot when it is in this particular configuration, where q2 is negative.</p>
<p>並且，這裡是我們的雙連桿機構在這種特定配置下的逆運動學的總結形式，其中 q2 為負。</p>
<p>Let’s compare the two solutions, the case where q2 is positive and the case where q2 is negative.</p>
<p>讓我們比較兩個解決方案，q2 為正的情況和 q2 為負的情況。</p>
<p><strong>看完影片後得知:</strong></p>
<p><img alt="" height="238" src="/images/螢幕擷取畫面 2021-06-10 165126.jpg" width="500"/></p>
<p><img alt="" height="257" src="/images/螢幕擷取畫面 2021-06-10 170045.jpg" width="500"/></p><h3>Inverse kinematics for a 2-joint robot arm using algebra</h3>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/eIZuz1XCd0w" width="560"></iframe></p>
<p><span>Here we have the same two link robot as we just looked at but this time we're going tosolve it using an analytical approach , that is we're going to rely much more on algebra ,particular linear algebra rather than geometry .</span></p>
<p><span>在這裡，我們有與剛剛看到的相同的兩連桿機構，但這次我們將使用分析方法來解決它，也就是說，我們將更多地依賴代數，特別是線性代數而不是幾何。</span></p>
<p><span>We have an expression E , which is the homogeneous transformation which represents the pose of the robots end effector and we looked at this in the last lecture , we can write the end effector pose as a sequence of elementary homogeneous transformations .</span></p>
<p><span>我們有一個表達式 E，它是表示機構</span><span>最終位置的齊次變換，我們在上一課中看到了這一點，我們可以將最終位置寫為一系列基本齊次變換。</span></p>
<p><span>A rotation by Q1 , a translation along the X direction by A1 , a rotation by Q2 and then a translation in the X direction by A2 .</span></p>
<p><span>Q1 旋轉，A1 沿 X 方向平移，Q2 旋轉，然後 A2 沿 X 方向平移。</span></p>
<p><span>If I expand this out , multiply all the transformations together , I get the expression shown here ; a three by three homogeneous transformation matrix representing the pose of the robot's end effector .</span></p>
<p><span>如果我將其展開，將所有變換相乘，就會得到此處所示的表達式；一個三乘三的齊次變換矩陣，表示機構的最終位置。</span></p>
<p><span>Now for this particular two link robot , we are only interested in the position of its <span>end effector</span> , it's X and Y co - ordinate and they are these two elements within the homogeneous transformation matrix , so I'm going to copy those out .</span></p>
<p><span>現在對於這個特殊的兩連桿機構，我們只對它的最終位置感興趣，它是 X 和 Y 坐標，它們是齊次變換矩陣中的這兩個元素，所以我將把它們複製出來。</span></p>
<p><span>So here again is our expression for X and Y and what we're going to do is a fairly common trick , we're going to square and add these two equations and I get a relationship that looks like this .</span></p>
<p><span>所以這裡又是我們對 X 和 Y 的表達式，我們要做的是一個相當常見的技巧，我們要平方並添加這兩個方程，我得到一個看起來像這樣的關係。</span></p>
<p><span>Now I can solve for the joint angle Q2 in terms of the <span><span>end effector</span></span> pose X and Y and the robot's constants A1 and A2.</span></p>
<p><span>現在我可以根據最終位置X 和 Y 以及機器人的常數 A1 和 A2 來求解關節角度 Q2。</span></p>
<p><span>Now what I'm going to do is apply the sum of angles identity .</span></p>
<p><span>現在我要做的是應用角度之和的特性。</span></p>
<p><span>I'm going to expand these terms, sine of Q1 plus Q2 or cos of Q1 plus Q2 and to make life a little bit easier, I'm going to make some substations, so where ever I had cos Q2, I'm going to write C2 and where ever I had sine Q2, I'm going to write S2.</span></p>
<p><span>我將擴展這些術語，Q1 的正弦加 Q2 或 Q1 的 cos 加 Q2，為了讓生活更輕鬆一點，我將建造一些變電站，所以只要有 cos Q2，我就會去寫 C2 並且在我有正弦 Q2 的地方，我要寫 S2。</span></p>
<p><span>It's a fairly common shorthand when people are looking at robot kinematic equations.</span></p>
<p><span>當人們查看機構運動學方程式時，這是一個相當常見的記法。</span></p>
<p><span>And here are the equations after making those substitutions.</span></p>
<p><span>這是進行這些替換後的方程式。</span></p>
<p><span>Looking at these two equations, I can see that they fall into a very well known form and for that form there is a very well known solution.</span></p>
<p><span>看看這兩個方程式，我可以看到它們屬於一個眾所周知的形式，對於這種形式，有一個眾所周知的解決方案。</span></p>
<p><span>So I'm going to consider just one of the equations, the equation for Y and using our well known identity and it's solution, I can determine the values for the variables little a, little b and little c and once l've determined those, then I can just write down the solution for Q1, which x is the equivalent of theta in this particular case.</span></p>
<p><span>所以我將只考慮其中一個方程，Y 的方程，並使用我們眾所周知的恆等式和它的解，我可以確定變量小 a、小 b 和小 c 的值，一旦我確定了這些，然後我可以寫下 Q1 的解決方程，在這種特殊情況下，x 相當於<span> </span><span>θ</span>。</span></p>
<p><span>Here again is our expression for Q1, copied over from the previous slide and we may remember from earlier in our workings that we determined this particular relationship; X squared plus Y squared is equal to this particular complex expression.</span></p>
<p><span>這裡再次是我們對 Q1 的表達，從上一張幻燈片複製過來，我們可能還記得在我們早期的說明中，確定了這種特殊關係； X 平方加 Y 平方等於這個特定的複雜表達式。</span></p>
<p><span>So I can substitute that in and do some simplification and I end up with this slightly less complex expression for Q1.</span></p>
<p><span>因此，我可以將其替換並進行一些簡化，最終得到 Q1 的這個稍微不那麼複雜的表達式。</span></p>
<p><span>And it is the same expression that I got following the geometric approach in the previous section.</span></p>
<p><span>這與我在上一節中遵循幾何方法得到的表達式相同。</span></p>
<p><strong>看完影片後得知:</strong></p>
<p><span><img alt="" height="225" src="/images/螢幕擷取畫面 2021-06-10 173704.jpg" width="500"/></span></p>
<h2>W16</h2>
<p><a href="https://40823152.gitlab.io/cd2021/content/W16.html">參考資料</a></p><h3>MTB Onshape</h3>
<p><a href="https://cad.onshape.com/documents/c87d57ce9bd18d98c0e6db80/w/db61257b17da434d6db8c693/e/fb5500c4216b7c97973be646">Onshape MTB_Robot</a></p>
<p><a href="https://drive.google.com/drive/folders/1LtZeg5P2-S43Ac6AlJrfnSzVOzQI9a3S?usp=sharing">MTB_Robot stl檔</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/zQT-bwMZL9A" width="560"></iframe></p>
<h3>建立 CoppeliaSim 4.1.0 MTB robot 場景</h3>
<p>使用老師w15的鍵盤控制，使自己組裝完的MTB_robot可以鍵盤控制。並利用 Leo Editor 以 require 導入 Lua 程式運作</p>
<p><a href="https://github.com/mdecourse/cd2021/tree/main/downloads/stage3/MTB_robot">老師的leo</a></p>
<p><a href="https://drive.google.com/drive/folders/1VWDxUu-VKp-6mEiPEr7DPKjhrJr-I-XJ?usp=sharing">W16_exam_MTB_robot keyboard.7z</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/wPo3JFRofF0" width="560"></iframe></p>
<p><strong>Lua 程式:</strong></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
     axis1=sim.getObjectHandle('MTB_axis1')
     axis2=sim.getObjectHandle('MTB_axis2')
     axis3=sim.getObjectHandle('MTB_axis3')
     axis4=sim.getObjectHandle('MTB_axis4')     
     rotation1 = 0
     rotation2 = 0
     distance3 = 0
    -- Do some initial settings here
    -- Get object handle
      
     deg = math.pi/180
     --sim.sJointTargetVelocity(joint,5.5)
     
end
 
function sysCall_actuation()
 calibration = 0.01
 message,auxiliaryData=sim.getSimulatorMessage()
 if (message==sim.message_keypress) then
      print(auxiliaryData[1])--key
      if (auxiliaryData[1]==string.byte(' ')) then
      end
       --Display keyboard key code
      if (auxiliaryData[1]==97) then--a
      rotation1 = rotation1 + 5*deg
      sim.setJointPosition(axis1, rotation1)
      end
      -- Press the "a" key to turn axis1 5 degrees counterclockwise
      if (auxiliaryData[1]==100) then --d
      rotation1 = rotation1 - 5*deg
      sim.setJointPosition(axis1, rotation1)
      end
      -- Press the "d" key to turn axis1 5 degrees clockwise
      if (auxiliaryData[1]==119) then--w
      rotation2 = rotation2 + 5*deg
      sim.setJointPosition(axis2, rotation2)
      end
      -- Press the "w" key to turn axis2 5 degrees counterclockwise
      if (auxiliaryData[1]==115) then --s
      rotation2 = rotation2 - 5*deg
      sim.setJointPosition(axis2, rotation2)
      end
      -- Press the "s" key to turn axis2 5 degrees clockwise
      if (auxiliaryData[1]==113) then --q
      distance3 = distance3 + calibration
      sim.setJointPosition(axis3, distance3)
      end
      -- Press the "q" key to move down 0.01
      if (auxiliaryData[1]==101) then --e
      distance3 = distance3 - calibration
      sim.setJointPosition(axis3, distance3)
      end
      -- Press the "e" key to move up 0.01
      
 end   
 
end
function sysCall_sensing()
    -- put your sensing code here
    
end
 
function sysCall_cleanup()
    -- do some clean-up here
    
end
 
</pre><h3>手臂末端加入 components-gripper-suction pad 吸盤</h3>
<p>接續MTB Robot keyboard, 在其抓物品的桿件上加suction pad</p>
<p><a href="https://drive.google.com/drive/folders/1I_AHD8rA2dkTjoYJJMQ9-3z67BkWpDSG?usp=sharing">W16_exam_MTB_robot keyboard add suction pad.7z</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/3bXMnqghFik" width="560"></iframe></p>
<p><strong>Lua程式:</strong></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
     axis1=sim.getObjectHandle('MTB_axis1')
     axis2=sim.getObjectHandle('MTB_axis2')
     axis3=sim.getObjectHandle('MTB_axis3')
     axis4=sim.getObjectHandle('MTB_axis4') 
     suctionPad=sim.getObjectHandle('suctionPad')     
     rotation1 = 0
     rotation2 = 0
     distance3 = 0
    -- Do some initial settings here
    -- Get object handle
      
     deg = math.pi/180
     --sim.sJointTargetVelocity(joint,5.5)
     
end
 
function sysCall_actuation()
 calibration = 0.01
 message,auxiliaryData=sim.getSimulatorMessage()
 if (message==sim.message_keypress) then
      print(auxiliaryData[1])--key
      if (auxiliaryData[1]==string.byte(' ')) then
      end
       --Display keyboard key code
      if (auxiliaryData[1]==97) then--a
      rotation1 = rotation1 + 5*deg
      sim.setJointPosition(axis1, rotation1)
      end
      -- Press the "a" key to turn axis1 5 degrees counterclockwise
      if (auxiliaryData[1]==100) then --d
      rotation1 = rotation1 - 5*deg
      sim.setJointPosition(axis1, rotation1)
      end
      -- Press the "d" key to turn axis1 5 degrees clockwise
      if (auxiliaryData[1]==119) then--w
      rotation2 = rotation2 + 5*deg
      sim.setJointPosition(axis2, rotation2)
      end
      -- Press the "w" key to turn axis2 5 degrees counterclockwise
      if (auxiliaryData[1]==115) then --s
      rotation2 = rotation2 - 5*deg
      sim.setJointPosition(axis2, rotation2)
      end
      -- Press the "s" key to turn axis2 5 degrees clockwise
      if (auxiliaryData[1]==113) then --q
      distance3 = distance3 + calibration
      sim.setJointPosition(axis3, distance3)
      end
      -- Press the "q" key to move down 0.01
      if (auxiliaryData[1]==101) then --e
      distance3 = distance3 - calibration
      sim.setJointPosition(axis3, distance3)
      end
      -- Press the "e" key to move up 0.01
      if (auxiliaryData[1]==122) then --z 
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
      end -- Press "z" key to activate the suction pad
      if (auxiliaryData[1]==120) then --x
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
      end -- Press "x" key to deactivate the suction pad
      
 end   
 
end
function sysCall_sensing()
    -- put your sensing code here
    
end
 
function sysCall_cleanup()
    -- do some clean-up here
    
end
 
</pre>
<p></p><h3>逆向運動學函式</h3>
<p><span>使用老師的逆運動學函式求出終點位置的位移，使MTB_robot在coppeliasim裡可以順利達到老師要求的位置</span></p>
<p><span><a href="https://drive.google.com/drive/folders/1zH_gJ80H0cogA9vhOeLMLPEpFBAcmGlm?usp=sharing">MTB_force mode.7z</a></span></p>
<p><strong>第一版:</strong></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/J0m9TPJ3oR8" width="560"></iframe></span></p>
<p><strong>第二版:</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/dp8DqVPdMtE" width="560"></iframe></strong></p>
<p><strong>Mtb_robot_keyboard.lua:</strong></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    -- do some initialization here
     axis1=sim.getObjectHandle('MTB_axis1')
     axis2=sim.getObjectHandle('MTB_axis2')
     axis3=sim.getObjectHandle('MTB_axis3')
     suctionPad=sim.getObjectHandle('suctionPad')     
     rotation1 = 0
     rotation2 = 0
     distance3 = 0
     
     deg = math.pi/180
function ik(x, y)
    theta = ik(0.2, 0.7)
    theta = ik(-0.3, -0.55)
    -- (x, y) need to be located inside the circle with radius a1+a2
    if (x^2 + y^2) &lt;= (a1+ a2)^2 then
        q2 = math.acos((x^2+y^2-a1^2-a2^2)/(2*a1*a2))
        q1 = math.atan2(y, x) - math.atan2((a2*math.sin(q2)), (a1+a2*math.cos(q2)))
        return {round(q1*deg, 4), round(q2*deg, 4)}
    end
    print(theta[1], theta[2])
  
end   
     
    
     

end
function sysCall_actuation()
 calibration = 0.004
 message,auxiliaryData=sim.getSimulatorMessage()
 if (message==sim.message_keypress) then
      print(auxiliaryData[1])--key
      if (auxiliaryData[1]==string.byte(' ')) then
      end
       --Display keyboard key code
      if (auxiliaryData[1]==97) then --a
      rotation1 = rotation1 + 5*deg
      sim.setJointPosition(axis1, rotation1)
      end
      -- Press the "a" key to turn axis1 5 degrees counterclockwise
      if (auxiliaryData[1]==100) then --d
      rotation1 = rotation1 - 5*deg
      sim.setJointPosition(axis1, rotation1)
      end
      -- Press the "d" key to turn axis1 5 degrees clockwise
      if (auxiliaryData[1]==119) then --w
      rotation2 = rotation2 + 5*deg
      sim.setJointPosition(axis2, rotation2)
      end
       -- Press the "w" key to turn axis2 5 degrees counterclockwise
      if (auxiliaryData[1]==115) then --s
      rotation2 = rotation2 - 5*deg
      sim.setJointPosition(axis2, rotation2)
      end
      -- Press the "s" key to turn axis2 5 degrees clockwise
      if (auxiliaryData[1]==101) then --e
      distance3 = distance3 + calibration
      sim.setJointPosition(axis3, distance3)
      end
      -- Press the "e" key to move down 0.01
      if (auxiliaryData[1]==113) then --q
      distance3 = distance3 - calibration
      sim.setJointPosition(axis3, distance3)
      end
      -- Press the "q" key to move up 0.01
      if (auxiliaryData[1]==122) then --z 
      sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
      end -- Press "z" key to activate the suction pad
      if (auxiliaryData[1]==120) then --x
      sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
      end -- Press "x" key to deactivate the suction pad
      if (auxiliaryData[1]==49) then --1
      V1=43.9242*deg
      V2=66.007*deg
      sim.setJointPosition(axis1, V1)
      sim.setJointPosition(axis2, V2)
      print(0.2,0.7)
      end
      -- Press "1" to go to (0.2, 0.7)
      if (auxiliaryData[1]==50) then --2
      V1=-158.2529*deg
      V2=87.7894*deg
      sim.setJointPosition(axis1, V1)
      sim.setJointPosition(axis2, V2)
      print(-0.3,-0.55)
      end
      -- Press "2" to go to (-0.3,- 0.55)
      
  
 end    


end

function sysCall_sensing()
    -- put your sensing code here
end
function sysCall_cleanup()
    -- do some clean-up here
end
</pre>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/swlLFBmwCfo" width="560"></iframe></strong></p>
<p><strong>Mtb_robot_loop.lua:</strong></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_threadmain()
    -- do some initialization here
    axis1=sim.getObjectHandle('MTB_axis1')
    axis2=sim.getObjectHandle('MTB_axis2')
    axis3=sim.getObjectHandle('MTB_axis3')
    suctionPad=sim.getObjectHandle('suctionPad')
    angle=180/math.pi
    angle1=math.pi/180
    a1=0.467
    a2=0.4
    x=0.2
    y=0.7
    print(a)
    function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
end
 
-- radian to degree
deg = 180/math.pi
-- link 1 length
a1 = 0.467
-- link 2 length
a2 = 0.4
-- derivated based upon https://www.youtube.com/watch?v=IKOGwoJ2HLk&amp;t=311s
function ik(x, y)
    -- (x, y) need to be located inside the circle with radius a1+a2
    if (x^2 + y^2) &lt;= (a1+ a2)^2 then
        q2 = math.acos((x^2+y^2-a1^2-a2^2)/(2*a1*a2))
        q1 = math.atan2(y, x) - math.atan2((a2*math.sin(q2)), (a1+a2*math.cos(q2)))
        return {round(q1*deg, 4), round(q2*deg, 4)}
    else
        print("Over range!")
    end
end
 
theta = ik(0.3, 0.3)

            sim.setJointPosition(axis1,theta[1]*angle1*0)
            sim.setJointPosition(axis2,theta[2]*angle1*0)
            sim.wait(5)
    
    while(true)
        do  
            sim.wait(5)
            sim.setJointPosition(axis3, -0.03)
            sim.wait(5)
            sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
            sim.wait(5)
            sim.setJointPosition(axis3, 0.01)
            theta = ik(0.2, 0.7)
            sim.wait(5)
            sim.setJointPosition(axis3, 0.01)
            sim.setJointPosition(axis1,theta[1]*angle1)
            sim.setJointPosition(axis2,theta[2]*angle1)
            print(x,y)
            print(theta[1],theta[2])
            sim.wait(10)
            sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
            sim.wait(5)
            sim.setJointPosition(axis3,0.01)
            sim.wait(5)
            sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','ture')
            sim.wait(5)
            sim.setJointPosition(axis3,-0.03)
             sim.wait(5)
            sim.setJointPosition(axis3, 0.01)
            sim.wait(10)
            theta = ik(-0.3, -0.55)
            sim.setJointPosition(axis3, 0.01)
            sim.setJointPosition(axis1,theta[1]*angle1)
            sim.setJointPosition(axis2,theta[2]*angle1)
            print(x,y)
            print(theta[1],theta[2])
            sim.wait(5)
            sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
            sim.wait(5)
            sim.setJointPosition(axis3,0.01)

    end   
    
    
    
end
</pre>
<p></p><h3>Python remote API 逆向運動學函式</h3>
<p>利用 Python remote API 程式重現以迴圈方式執行 W15 兩個指定位置之方塊取放</p>
<p><a href="https://drive.google.com/drive/folders/170qvigvqB4LbJS7fxLXlD_7vuOaJKZs4?usp=sharing">MTB_Python remote API.7z</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/AkSXQKHoCms" width="560"></iframe></p>
<p>remote_api.py:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import keyboard
 
 

print ('Start')
 
# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID != -1:
    print ('Connected to remote API server')
     
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823125",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
 
     
    opmode = vrep.simx_opmode_oneshot_wait
    angle1=math.pi/180
     
    # radian to degree
    deg = 180/math.pi
    # link 1 length
    a1 = 0.468
    # link 2 length
    a2 = 0.4
    # derivated based up https://www.youtube.com/watch?v=IKOGwoJ2HLk&amp;t=311s
    
    def ik(x, y):
        x = 0
    y = 0
    # (x, y)  need to be located inside the circle with radius a1+a2
       if (x**2 + y**2) &lt;= (a1+ a2)**2:
          q2 = math.acos((x**2+y**2-a1**2-a2**2)/(2*a1*a2))
          q1 = math.atan2(y, x) - math.atan2((a2*math.sin(q2)), (a1+a2*math.cos(q2)))
        # The decimal point of number is rounded to the 4th place
          return [round(q1*deg, 4), round(q2*deg, 4)]
       else:
         print("Over range!")
        # end the script execution

 
    theta = ik(0.2, 0.7)
    
    print(theta[0], theta[1])

    ret,axis1=vrep.simxGetObjectHandle(clientID,"MTB_axis1",opmode)
    ret,axis2=vrep.simxGetObjectHandle(clientID,"MTB_axis2",opmode)
    ret,axis3=vrep.simxGetObjectHandle(clientID,"MTB_axis3",opmode)
    #Define basic values
    vrep.simxSetJointTargetPosition(clientID,axis1,theta[0]*angle1,opmode)
    vrep.simxSetJointTargetPosition(clientID,axis2,theta[1]*angle1,opmode)
    #Define the position of the axis
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    #Use remote_API to output the defined value to the suction cup in coppilaSim for action
    time.sleep(0.5)
    while True:
            vrep.simxSetJointPosition(clientID,axis3,-0.03,opmode)
            time.sleep(0.5)
            vrep.simxSetJointPosition(clientID,axis3,0.01,opmode)
            theta = ik(0.2, 0.7)
            time.sleep(0.5)
            vrep.simxSetJointPosition(clientID,axis3,0.01,opmode)
            vrep.simxSetJointPosition(clientID,axis1,theta[0]*angle1,opmode)
            vrep.simxSetJointPosition(clientID,axis2,theta[1]*angle1,opmode)
            print(theta[0],theta[1])
            time.sleep(2)
            vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
            time.sleep(0.5)
            vrep.simxSetJointPosition(clientID,axis3,-0.03,opmode)
            time.sleep(0.5)
            vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
            time.sleep(0.5)
            vrep.simxSetJointPosition(clientID,axis3,0.01,opmode)
            time.sleep(0.5)
            theta = ik(-0.3, -0.55)
            vrep.simxSetJointPosition(clientID,axis3,0.01,opmode)
            vrep.simxSetJointPosition(clientID,axis1,theta[0]*angle1,opmode)
            vrep.simxSetJointPosition(clientID,axis2,theta[1]*angle1,opmode)
            print(theta[0],theta[1])
            time.sleep(2)
            vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
            time.sleep(0.5)
            vrep.simxSetJointPosition(clientID,axis3,0.01,opmode)
            time.sleep(0.5)
            vrep.simxSetJointPosition(clientID,axis3,-0.03,opmode)
            time.sleep(0.5)
            vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    end
         
else:
    print ('Failed connecting to remote API server')
    print ('End')</pre>
<p><strong>主程式:</strong></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- Put some initialization code here:
sim.setThreadSwitchTiming(2) -- Default timing for automatic thread switching

-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
	sim.addStatusbarMessage('Lua runtime error: '..err)
end

-- Put some clean-up code here:
simRemoteApi.start(19997)</pre>
<p><span>從<a href="https://40823246.github.io/cd2021/content/w16.html">40823246</a>得知的</span>吸盤程式(<a href="https://40823214.github.io/cd2021/content/index.html">40823214</a>的程式):</p>
<div>
<div class="syntaxhighlighter lua" id="highlighter_131059">
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init() 
    objectHandle=sim.getObjectHandle('suctionPad')
    sim.setUserParameter(objectHandle,'@enable','')
    modelBase=sim.getObjectAssociatedWithScript(sim.handle_self)
    robotBase=modelBase
    while true do
        robotBase=sim.getObjectParent(robotBase)
        if robotBase==-1 then
            robotName='Dobot'
            break
        end
        robotName=sim.getObjectName(robotBase)
        suffix,suffixlessName=sim.getNameSuffix(robotName)
        if suffixlessName=='Dobot' then
            break
        end
    end
 
    s=sim.getObjectHandle('suctionPadSensor')
    l=sim.getObjectHandle('suctionPadLoopClosureDummy1')
    l2=sim.getObjectHandle('suctionPadLoopClosureDummy2')
    b=sim.getObjectHandle('suctionPad')
    suctionPadLink=sim.getObjectHandle('suctionPadLink')
    local gripperBase=sim.getObjectAssociatedWithScript(sim.handle_self)
 
    infiniteStrength=sim.getScriptSimulationParameter(sim.handle_self,'infiniteStrength')
    maxPullForce=sim.getScriptSimulationParameter(sim.handle_self,'maxPullForce')
    maxShearForce=sim.getScriptSimulationParameter(sim.handle_self,'maxShearForce')
    maxPeelTorque=sim.getScriptSimulationParameter(sim.handle_self,'maxPeelTorque')
    -- Do some initial settings here
    sim.setLinkDummy(l,-1)
    sim.setObjectParent(l,b,true)
    m=sim.getObjectMatrix(l2,-1)
    sim.setObjectMatrix(l,-1,m)
end
 
function sysCall_cleanup() 
    sim.setLinkDummy(l,-1)
    sim.setObjectParent(l,b,true)
    m=sim.getObjectMatrix(l2,-1)
    sim.setObjectMatrix(l,-1,m)
end
 
function sysCall_sensing() 
    parent=sim.getObjectParent(l)
    local sig=sim.getIntegerSignal("pad_switch")
    if (not sig) or (sig==0) then
        if (parent~=b) then
            sim.setLinkDummy(l,-1)
            sim.setObjectParent(l,b,true)
            m=sim.getObjectMatrix(l2,-1)
            sim.setObjectMatrix(l,-1,m)
        end
        --Execute the suction cup program by importing the command function
    else
        if (parent==b) then
            index=0
            while true do
                shape=sim.getObjects(index,sim.object_shape_type)
                if (shape==-1) then
                    break
                end
                local res,val=sim.getObjectInt32Parameter(shape,sim.shapeintparam_respondable)
                if (shape~=b) and (val~=0) and (sim.checkProximitySensor(s,shape)==1) then
                    -- Ok, we found a respondable shape that was detected
                    -- We connect to that shape:
                    -- Make sure the two dummies are initially coincident:
                    sim.setObjectParent(l,b,true)
                    m=sim.getObjectMatrix(l2,-1)
                    sim.setObjectMatrix(l,-1,m)
                    -- Do the connection:
                    sim.setObjectParent(l,shape,true)
                    sim.setLinkDummy(l,l2)
                    break
                end
                index=index+1
            end
        else
            -- Here we have an object attached
            if (infiniteStrength==false) then
                -- We might have to conditionally beak it apart!
                result,force,torque=sim.readForceSensor(suctionPadLink) -- Here we read the median value out of 5 values (check the force sensor prop. dialog)
                if (result&gt;0) then
                    breakIt=false
                    if (force[3]&gt;maxPullForce) then breakIt=true end
                    sf=math.sqrt(force[1]*force[1]+force[2]*force[2])
                    if (sf&gt;maxShearForce) then breakIt=true end
                    if (torque[1]&gt;maxPeelTorque) then breakIt=true end
                    if (torque[2]&gt;maxPeelTorque) then breakIt=true end
                    if (breakIt) then
                        -- We break the link:
                        sim.setLinkDummy(l,-1)
                        sim.setObjectParent(l,b,true)
                        m=sim.getObjectMatrix(l2,-1)
                        sim.setObjectMatrix(l,-1,m)
                    end
                end
            end
        end
    end
end</pre>
<h2>W18</h2>
<h3>Sensor</h3>
<p>sensor file link</p>
<p><a href="https://drive.google.com/drive/folders/1OLC3aaZDLjfOV83BSGXqwQgmlf1pcbRD?usp=sharing" title="senser"><img alt="" height="77" src="https://40823125.github.io/stage3-ag6/images/Basketball_machine3.1.png" width="315"/></a></p>
<p>完成品:</p>
<p><a href="https://drive.google.com/drive/folders/1Iw-gwgMGPL3zxq9aTTqa3zqRnfZ3IsFi?usp=sharing" title="Basketball machine 3.1"><img alt="" height="76" src="https://40823125.github.io/stage3-ag6/images/Basketball machine3.5.png" width="314"/></a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/x4-fqzVcYUA" width="560"></iframe></p>
<p>這是紅球的內部狀況</p>
<p><img alt="" height="238" src="https://40823125.github.io/stage3-ag6/images/Basketball_machine senser3.1-5.png" width="400"/></p>
<p>裡面放一顆較小的綠球，因為紅球太大顆會導致感測器失靈，所以讓感測器去感測綠球就不會有這個問題</p>
<p><img alt="" height="208" src="https://40823125.github.io/stage3-ag6/images/Basketball_machine senser3.1-6.png" width="400"/></p>
<p>感測器放了四根，呈現八角形讓感測器可以比較容易感測球</p>
<p><img alt="" height="198" src="https://40823125.github.io/stage3-ag6/images/Basketball_machine3.1-1.png" width="400"/></p>
<p>當綠球觸碰到res、res0、res1抑或是res2</p>
<p>那麼就會顯示1分</p>
<p><img alt="" height="509" src="https://40823125.github.io/stage3-ag6/images/Basketball_machine senser3.1-3.png" width="600"/></p>
<p>這段程式是為了在製作感測器時能夠方便檢測，所以讓球重生再籃框上的位置</p>
<p><img alt="" height="490" src="https://40823125.github.io/stage3-ag6/images/Basketball_machine senser3.1-2.png" width="600"/></p><h1>Collaborative flowchart</h1>
<p><span>我認為藉由此流程圖可以降低內容互相覆蓋，最終造成無法辨識是誰更改內容的情況。</span></p>
<p><span>每一位協同者製作與更改的項目都會顯示在上面，還能輕易地找出之前所做的每一項目和誰有在做事。</span></p>
<p><img caption="false" height="381" src="/images/Untitled Diagram.png" width="550"/></p>
<p></p></div></div></div></div>